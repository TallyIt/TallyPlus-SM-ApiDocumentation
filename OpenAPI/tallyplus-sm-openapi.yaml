info:
  description: The OpenAPI specification for Tally+ Small Market.
  title: Tally+ Small Market OpenAPI
  version: v0.1
openapi: 3.0.1
paths:
  "/v1/account-balance/{accountNumber}":
    get:
      parameters:
        - in: path
          name: accountNumber
          description: ''
          required: true
          schema:
            type: string
      tags:
      - "Account"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account-balance/{accountNumber}
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
      responses:
        '200':
          description: Successful retrieval of an account balance.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AccountBalance"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
  "/v1/account/{accountNumber}":
    get:
      summary: Get account information by account number
      parameters:
        - in: path
          name: accountNumber
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 successful http response
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/AccountDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/{accountNumber}"
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
      x-codegen-request-body-name: body
  "/v1/account/best-offer":
    post:
      summary: Trigger Best Offer Request and return the results
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountNumber
                - requestType
                - startDate
                - endDate
              properties:
                accountNumber:
                  type: string
                requestType:
                  type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Successfully created a new request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountBestOfferProducts"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: https://api-meterdata.CLASS_NAME.encore.sh/external/api/meterdata/v1/accounts/allProductBestOffer
  "/v1/account/{accountNumber}/interactions":
    get:
      summary: Get the interactions and events of an account
      parameters:
        - in: path
          name: accountNumber
          required: true
          schema:
            type: string
        - in: query
          name: interactionType
          required: true
          schema:
            $ref: "#/components/schemas/AccountInteractionType"
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Number of the page to get
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: pageSize
          description: Size of the page to get
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: 200 successful http response
          content:
            "application/json":
              schema:
                type: object
                properties:
                  accountNumber:
                    type: string
                  accountInteractions:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountInteractionPaginatedResponseDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
          integration.request.querystring.interactionType: method.request.querystring.interactionType
          integration.request.querystring.startDate: method.request.querystring.startDate
          integration.request.querystring.endDate: method.request.querystring.endDate
          integration.request.querystring.page: method.request.querystring.page
          integration.request.querystring.pageSize: method.request.querystring.pageSize
        httpMethod: GET
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/{accountNumber}/interactions"
      x-codegen-request-body-name: body
  /v1/interaction:
    post:
      tags:
        - Account
      summary: "Insert Interaction API"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/insertInteractionRequest"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/interaction"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully added Interaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  "/v1/account/{accountNumber}/invoices":
    get:
      parameters:
        - in: path
          name: accountNumber
          description: ''
          required: true
          schema:
            type: string
        - in: query
          name: fromDate
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: toDate
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Number of the page to get
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: pageSize
          description: Size of the page to get
          schema:
            type: integer
            format: int32
            default: 0
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/{accountNumber}/invoices
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
          integration.request.querystring.fromDate: method.request.querystring.fromDate
          integration.request.querystring.toDate: method.request.querystring.toDate
          integration.request.querystring.page: method.request.querystring.page
          integration.request.querystring.pageSize: method.request.querystring.pageSize
      responses:
        '200':
          description: Successful retrieval of bills.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/InvoicesResponseDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"   
  "/v1/account/{accountNumber}/product-pricing":
    get:
      parameters:
        - in: path
          name: accountNumber
          schema:
            type: string
          required: true
        - in: query
          name: includeHistory
          schema:
            type: boolean
        - in: query
          name: historyStartDate
          schema:
            type: string
            format: date
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/{accountNumber}/product-pricing
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
          integration.request.querystring.includeHistory: method.request.querystring.includeHistory
          integration.request.querystring.historyStartDate: method.request.querystring.historyStartDate
      responses:
        '200':
          description: Successful retrieval of invoice details.
          content:
            "application/json":
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/AccountPricesDto"
        '400':
          description: Bad Request
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    $ref: "#/components/schemas/ErrorResponse"
  "/v1/account/{accountNumber}/transactions":
    get:
      parameters:
        - in: path
          name: accountNumber
          description: ''
          required: true
          schema:
            type: string
        - in: query
          name: fromDate
          description: From Date (will be compared against the created date of the transaction)
          schema:
            type: string
            format: date
        - in: query
          name: toDate
          description: To Date (will be compared against the created date of the transaction)
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Number of the page to get
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: pageSize
          description: Size of the page to get
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: transactionType
          description: Filter transactions by type.
          schema:
            type: string
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
          integration.request.querystring.fromDate: method.request.querystring.fromDate
          integration.request.querystring.toDate: method.request.querystring.toDate
          integration.request.querystring.page: method.request.querystring.page
          integration.request.querystring.pageSize: method.request.querystring.pageSize
          integration.request.querystring.transactionType: method.request.querystring.transactionType
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/{accountNumber}/transactions"
      responses:
        200:
          description: Successful retrieval of transactions.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AccountTransactionPaginatedResponseDto"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
  "/v1/account/{accountNumber}/usage":
    get:
      summary: "Aggregated Usage"
      parameters:
        - in: "path"
          name: "accountNumber"
          required: true
          schema:
            type: "string"
            maxLength: 50
        - in: "query"
          name: "brand"
          description: ECMM = East Coast Mass Market
          required: true
          schema:
            type: "string"
            maxLength: 50
            enum:
              - ECMM
        - in: "query"
          name: "startDate"
          description: The first date of usage to return
            Format YYYY-MM-DD
          required: true
          schema:
            type: "string"
            format: "date"
        - in: "query"
          name: "endDate"
          description: The last date of usage to return
            Format YYYY-MM-DD
          required: true
          schema:
            type: "string"
            format: "date"
        - in: "query"
          name: "timeInterval"
          description: Field to align with the other usage APIs. Billing denotes that the data returned will be based on billed periods (as opposed to calendar time period in the other usage APIs)
          required: true
          schema:
            type: "string"
            maxLength: 50
            enum:
              - BILLING
      responses:
        '200':
          description: Successfully added DD details
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/InvoiceUsageDetail"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/{accountNumber}/usage
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
          integration.request.querystring.brand: method.request.querystring.brand
          integration.request.querystring.startDate: method.request.querystring.startDate
          integration.request.querystring.endDate: method.request.querystring.endDate
          integration.request.querystring.timeInterval: method.request.querystring.timeInterval
      x-codegen-request-body-name: body
  "/v1/account/{accountNumber}/best-offer":
    get:
      parameters:
        - in: path
          name: accountNumber
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Result of valid best offer query.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AccountBestOfferDto"
        '400':
          description: Result of invalid best offer query.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        requestParameters:
          integration.request.path.accountNumber: method.request.path.accountNumber
        httpMethod: GET
        uri: "https://api-meterdata.CLASS_NAME.encore.sh/external/api/meterdata/v1/accounts/{accountNumber}/bestOffer"
  /v1/account/fundTransfer:
    post:
      summary: CORE Account Fund Transfer API
      description: CORE Account Fund Transfer API
      requestBody:
        required: true
        description: CORE Account Fund Transfer
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundTransferParams"
      tags:
        - Account
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/fundTransfer
      responses:
        200:
          description: Successfully extended CORE payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        400:
          description: Problem with the input payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
  /v1/account/product-change:
    post:
      tags:
      - Account
      summary: "Request a Product Change"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductChangeRequest"
      x-amazon-apigateway-integration:
            httpMethod: "POST"
            uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/changeProduct"
            payloadFormatVersion: 1.0
      responses:
        '200':
          description: Product Changed Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/successfulResponse"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: "#/components/schemas/ErrorResponse"
  /v1/account/refund:
    post:
      tags:
        - Account
      summary: CORE Account Refund API
      description: CORE Account Refund API
      requestBody:
        required: true
        description: CORE Account Refund
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundRequestParams"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account/refund
      responses:
        200:
          description: Successfully processed refund request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        400:
          description: Problem with the input payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
  /v1/account/sale:
    post:
      tags:
      - Account
      summary: "Create a CORE Account"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/customerEntry"
      x-amazon-apigateway-integration:
            httpMethod: "POST"
            uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/sale"
            payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully created a new request
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/accountCreationSuccessfulResponse"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: "#/components/schemas/ErrorResponse"
  /v1/accountbeplog:
    post:
      tags:
      - Account
      summary: Create AccountBEPLog entry
      description: Create AccountBEPLog entry
      operationId: createAccountBEPLogEntry
      requestBody:
        description: The AccountBEPLog entry to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBEPLogRequest'
        required: true
      responses:
        200:
          description: Successfully created log entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        400:
          description: Problem with the input payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/accountbeplog
      x-codegen-request-body-name: body
  /v1/move-out:
    post:
      tags:
      - Account
      summary: "Process moveout for an account"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveoutRequest"
      x-amazon-apigateway-integration:
            httpMethod: "POST"
            uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/move-out"
            payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully created a new request
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: "#/components/schemas/response"
  /v1/account:
    put:
      tags:
        - Account
      summary: "Update Account"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountRequest"
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully updated account
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/concession-card:
    post:
      tags:
        - Concessions
      summary: "Insert Concession Card"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/concessionCardRequest"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/concession-card"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully added a Concession Card
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/cdr-interaction:
    post:
      tags:
        - Consumer Data Rights
      summary: "Inserts interaction eventLog records to trigger CDR interaction types"
      requestBody:
        description: "An sample of the request object is given below"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/consumerDataRightInteractionRequest"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-interaction.CLASS_NAME.encore.sh/external/api/interaction/v1/cdr-interaction"
        payloadFormatVersion: 1.0
      responses:
            '200':
              description: "Interaction event has been generated successfully"
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      payload:
                        $ref: "#/components/schemas/consumerDataRightInteractionResult"
            '400':
              description: "Failed Request"
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error:
                        $ref: "#/components/schemas/consumerDataRightInteractionResult"
  "/v1/customer/{customerNumber}":
    get:
      summary: Get a customer's overall profile information by id
      parameters:
        - in: path
          name: customerNumber
          required: true
          schema:
            type: string
        - in: query
          name: includeConcessions
          required: false
          schema:
            type: boolean
            default: false
      tags:
        - Customer
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/customer/{customerNumber}
        requestParameters:
          integration.request.path.customerNumber: method.request.path.customerNumber
      responses:
        '200':
          description: Successfully retrieved customer details
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/CustomerDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
  "/v1/customer/{customerNumber}/accounts":
    get:
      summary: Get account information by account number
      parameters:
        - in: path
          name: customerNumber
          description: ''
          required: true
          schema:
            type: string
        - in: query
          name: includeDetail
          description: Whether to return the additional account details
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 200 successful http response
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CustomerAccountDto"
        '400':
          description: Bad Request
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Customer
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/customer/{customerNumber}/accounts
        requestParameters:
          integration.request.path.customerNumber: method.request.path.customerNumber
          integration.request.querystring.includeDetail: method.request.querystring.includeDetail
      x-codegen-request-body-name: body
  "/v1/customer/{customerNumber}/identity":
    get:
      summary: Get a customer's identity information by customer number. Note this is sensitive info
      parameters:
        - in: path
          name: customerNumber
          required: true
          schema:
            type: string
      tags:
        - Customer
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/customer/{customerNumber}/identity
        requestParameters:
          integration.request.path.customerNumber: method.request.path.customerNumber
      responses:
        '200':
          description: 200 successful http response
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/CustomerIdentityDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
  "/v1/customers":
    get:
      parameters:
        - in: query
          name: salesNumber
          schema:
            type: string
        - in: query
          name: accountNumber
          schema:
            type: string
        - in: query
          name: firstName
          schema:
            type: string
        - in: query
          name: lastName
          schema:
            type: string
        - in: query
          name: dob
          schema:
            type: string
            format: date
        - in: query
          name: phoneNumber
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: postCode
          schema:
            type: string
        - in: query
          name: abn
          schema:
            type: string
        - in: query
          name: acn
          schema:
            type: string
        - in: query
          name: employeeNumber
          schema:
            type: string
      responses:
        '200':
          description: Valid search of customers.
          content:
            "application/json":
              schema:
                  $ref: "#/components/schemas/CustomerNumbers"
        '400':
          description: Invalid search of customers.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Customer
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        requestParameters:
          integration.request.querystring.salesNumber: method.request.querystring.salesNumber
          integration.request.querystring.accountNumber: method.request.querystring.accountNumber
          integration.request.querystring.firstName: method.request.querystring.firstName
          integration.request.querystring.lastName: method.request.querystring.lastName
          integration.request.querystring.dob: method.request.querystring.dob
          integration.request.querystring.phoneNumber: method.request.querystring.phoneNumber
          integration.request.querystring.email: method.request.querystring.email
          integration.request.querystring.postCode: method.request.querystring.postCode
          integration.request.querystring.abn: method.request.querystring.abn
          integration.request.querystring.acn: method.request.querystring.acn
          integration.request.querystring.employeeNumber: method.request.querystring.employeeNumber
        httpMethod: GET
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/customer"
      x-codegen-request-body-name: body
  /v1/entity:
    post:
      tags:
        - Customer
      summary: "Insert Entity"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsertEntityRequest"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/entity"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully inserted entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/account-entity:
    put:
      tags:
        - Customer
      summary: "Remove Contact"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveContactRequest"
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/AccountEntity"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully removed contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/account-billing:
    put:
      tags:
        - Finance
      summary: "Link existing payment details to account"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/linkPaymentRequest"
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/account-billing"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully Linked Payment
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/cc-payment:
    post:
      summary: "Credit Card Payment"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CCPaymentRequest"
      tags:
        - Finance
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/CCPayment"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully added CC payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/paymentext:
    post:
      tags:
        - Finance
      summary: CORE Payment due date extension
      description: CORE Payment due date extension
      operationId: corePaymentExtension
      requestBody:
        description: Extend the due date for CORE payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorePaymentExtensionRequest'
        required: true
      responses:
        200:
          description: Successfully extended CORE payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        400:
          description: Problem with the input payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiResponse'
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/paymentext
      x-codegen-request-body-name: body
  /v1/dd-registration:
    post:
      tags:
        - Finance
      summary: "Direct debit details"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DDRegistrationRequest"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/DDRegistration"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully added DD details
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/entity-payment:
    put:
      tags:
        - Finance
      summary: "Set and entity payment to inactive"
      requestBody:
        required: true
        description: "An example of a message is given below."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/removeSavedPaymentRequest"
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/entity-payment"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully Linked Payment
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  payload:
                    $ref: "#/components/schemas/response"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/response"
  /v1/get-invoice-url:
    post:
      tags:
      - Invoice
      summary: Create and return presigned url for the invoice
      description: Create and return presigned url for the invoice
      operationId: getInvoiceUrl
      requestBody:
        description: Create and return presigned url for the invoice
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getInvoiceUrlRequest'
        required: true
      responses:
        200:
          description: Successfully created presigned url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceResponse'
        400:
          description: Problem with the input payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceResponse'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceResponse'
      x-amazon-apigateway-integration:
        type: "AWS_PROXY"
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: lambda-get-invoice-url
      x-codegen-request-body-name: body
  "/v1/invoice/{invoiceNumber}":
    get:
      parameters:
        - in: path
          name: invoiceNumber
          description: ''
          required: true
          schema:
            type: string
      tags:
        - Invoice
      x-amazon-apigateway-integration:
       payloadFormatVersion: "1.0"
       httpMethod: GET
       uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/invoice/{invoiceNumber}"
       requestParameters:
         integration.request.path.invoiceNumber: method.request.path.invoiceNumber
      responses:
        '200':
          description: Successful retrieval of invoice details.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/InvoiceDetailDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
  /v1/products:
    get:
      summary: Get a list of all currently available products
      parameters:
        - in: query
          name: availabilityType
          schema:
            type: string
        - in: query
          name: productCode
          schema:
            type: string
        - in: query
          name: serviceType
          schema:
            type: string
            enum:
              - ELECTRICITY
              - GAS
        - in: query
          name: jurisdiction
          schema:
            $ref: "#/components/schemas/Jurisdiction"
        - in: query
          name: accountType
          schema:
            type: string
            enum:
              - RESIDENTIAL
              - BUSINESS
        - in: query
          name: effectiveDate
          schema:
            type: string
            format: date
      tags:
        - Products
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/products
        requestParameters:
          integration.request.querystring.availabilityType: method.request.querystring.availabilityType
          integration.request.querystring.productCode: method.request.querystring.productCode
          integration.request.querystring.effectiveDate: method.request.querystring.effectiveDate
          integration.request.querystring.serviceType: method.request.querystring.serviceType
          integration.request.querystring.accountType: method.request.querystring.accountType
          integration.request.querystring.jurisdiction: method.request.querystring.jurisdiction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductDto'
        '400':
          description: Result of invalid product query.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
  "/v1/products/product-pricing/search":
    post:
      summary: Retreive Product Pricing for multiplpe tariffs
      responses:
        '200':
          description: Successfully created a new request
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductPricingProductDto"
        '400':
          description: Result of invalid product query.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountType
                - networkCode
                - tariffCombo
                - productCode
              properties:
                accountType:
                  type: string
                  enum:
                    - RESIDENTIAL
                    - BUSINESS
                networkCode:
                  type: string
                tariffCombo:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                  maxItems: 10
                productCode:
                  type: string
                effectiveDate:
                  type: string
                  format: date
      tags:
        - Products
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: POST
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/products/product-pricing/search
      x-codegen-request-body-name: body
  "/v1/products/product-pricing":
    get:
      parameters:
        - in: query
          name: accountType
          schema:
            type: string
            items:
              $ref: "#/components/schemas/AccountType"
        - in: query
          name: serviceType
          schema:
            type: string
            enum:
              - ELECTRICITY
              - GAS
          required: true
        - in: query
          name: networkCode
          schema:
            type: string
        - in: query
          name: tariffCombo
          schema:
            type: array
            items:
              type: string
        - in: query
          name: postCode
          schema:
            type: string
        - in: query
          name: productCode
          schema:
            type: string
        - in: query
          name: effectiveDate
          schema:
            type: string
            format: date
        - in: query
          name: jurisdiction
          schema:
            type: string
        - in: query
          name: availabilityType
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AvailabilityTypeEnum"
      tags:
        - Products
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/products/product-pricing
        requestParameters:
          integration.request.querystring.accountType: method.request.querystring.accountType
          integration.request.querystring.serviceType: method.request.querystring.serviceType
          integration.request.querystring.networkCode: method.request.querystring.networkCode
          integration.request.querystring.tariffCombo: method.request.querystring.tariffCombo
          integration.request.querystring.postCode: method.request.querystring.postCode
          integration.request.querystring.productCode: method.request.querystring.productCode
          integration.request.querystring.availabilityType: method.request.querystring.availabilityType
          integration.request.querystring.effectiveDate: method.request.querystring.effectiveDate
          integration.request.querystring.jurisdiction: method.request.querystring.jurisdiction
      responses:
        '200':
          description: Successful retrieval of product pricing details.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductPricingProductDto"
        '400':
          description: Result of invalid product query.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
  /v1/products/product-advice:
    get:
      parameters:
        - in: query
          name: productCode
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          required: true
        - in: query
          name: serviceType
          schema:
            type: string
            enum:
            - ELECTRICITY
          required: true
        - in: query
          name: jurisdiction
          schema:
            $ref: "#/components/schemas/Jurisdiction"
          required: true
        - in: query
          name: accountType
          schema:
            type: string
            enum:
            - RESIDENTIAL
            - BUSINESS
          required: true 
        - in: query
          name: tariffDescription
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          required: true
        - in: query
          name: networkCode
          schema:
            type: string
        - in: query
          name: effectiveDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: "Successful retrieval of invoice details."
          content:
            "application/json":
              schema:
                type: object
                properties:
                  productAdvices:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdviceProductDto"
        '400':
          description: Result of invalid product query.
          content:
            "application/json":
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Products
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/products/product-advice
        requestParameters:
          integration.request.querystring.productCode: method.request.querystring.productCode
          integration.request.querystring.tariffDescription: method.request.querystring.tariffDescription
          integration.request.querystring.serviceType: method.request.querystring.serviceType
          integration.request.querystring.jurisdiction: method.request.querystring.jurisdiction
          integration.request.querystring.accountType: method.request.querystring.accountType
          integration.request.querystring.networkCode: method.request.querystring.networkCode
          integration.request.querystring.effectiveDate: method.request.querystring.effectiveDate
  /v1/quote:
    post:
      tags:
        - Sales
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-meterdata.CLASS_NAME.encore.sh/external/api/meterdata/v1/quote"
        payloadFormatVersion: 1.0
      summary: Request Quote
      responses:
        '200':
          description: Successfully created a new request
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/quoteResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - brand
              properties:
                customerType:
                  type: string
                  enum:
                    - RESIDENTIAL
                    - BUSINESS
                brand:
                  type: string
                electricity:
                    $ref: '#/components/schemas/QuoteElectricity'
                gas:
                    $ref: '#/components/schemas/QuoteGas'  
  /v1/meter-read:
    post:
      tags:
        - Usage
      summary: Insert Basic Meter Read
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "https://api-meterdata.CLASS_NAME.encore.sh/external/api/meterdata/v1/customer-read"
        payloadFormatVersion: 1.0
      responses:
        '200':
          description: Successfully created a new request
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountNumber
                - brand
                - utilityIdentifier
                - readDate
                - rebill
                - shortBill
                - meterReads
              properties:
                accountNumber:
                  type: string
                brand:
                  type: string
                utilityIdentifier:
                  type: string
                readDate:
                  type: string
                  format: date
                rebill:
                  type: boolean
                shortBill:
                  type: boolean
                  maxLength: 150
                meterReads:
                  type: array
                  items:
                    $ref: '#/components/schemas/MeterRead'
  "/v1/utility/{utilityIdentifier}/meter-read":
    get:
      tags:
        - Usage
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        requestParameters:
          integration.request.path.utilityIdentifier: method.request.path.utilityIdentifier
          integration.request.querystring.fromDate: method.request.querystring.fromDate
          integration.request.querystring.toDate: method.request.querystring.toDate
        uri: "https://api-meterdata.CLASS_NAME.encore.sh/external/api/v1/utility/{utilityIdentifier}/meterRead"
        payloadFormatVersion: 1.0
      parameters:
        - in: path
          name: utilityIdentifier
          required: true
          schema:
            type: string
        - in: query
          name: fromDate
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: toDate
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully created a new request
          content:
            application/json:
              schema:
                type: object
                properties:
                  utilityIdentifier:
                    type: string
                  gasMeterReads:
                    type: array
                    items:
                      $ref: '#/components/schemas/GasMeterRead'
                  electricityMeterReads:
                    type: array
                    items:
                      $ref: '#/components/schemas/ElectricityMeterRead'  
  /v1/aggregated-read:
    get:
      tags:
        - Usage
      summary: "Aggregated Usage"
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "https://api-meterdata.CLASS_NAME.encore.sh/external/api/meterdata/v1/aggregated-read"
        payloadFormatVersion: 1.0
        requestParameters:
          integration.request.querystring.brand: method.request.querystring.brand
          integration.request.querystring.startDate: method.request.querystring.startDate
          integration.request.querystring.endDate: method.request.querystring.endDate
          integration.request.querystring.accountNumber: method.request.querystring.accountNumber
          integration.request.querystring.timeInterval: method.request.querystring.timeInterval
      parameters:
        - in: "query"
          name: "brand"
          description: Brand name usually ECMM
          required: true
          schema:
            type: "string"
        - in: "query"
          name: "accountNumber"
          description: The Account Number
          required: true
          schema:
            type: "string"
            maxLength: 50
        - in: "query"
          name: "startDate"
          description: The first date of usage to return
            Format DD/MM/YYYY
          required: true
          schema:
            type: "string"
            format: "date"
        - in: "query"
          name: "endDate"
          description: The last date of usage to return
            Format DD/MM/YYYY
          required: true
          schema:
            type: "string"
            format: "date"
        - in: "query"
          name: "timeInterval"
          description: The aggreation level of the data to return
          required: true
          schema:
            type: "string"
            maxLength: 50
            enum:
              - DAILY
              - MONTHLY
      responses:
        '200':
          description: Successfully added DD details
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    $ref: "#/components/schemas/usageResponse"
        '400':
          description: Failed Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorPayload:
                    $ref: "#/components/schemas/usageResponse"
  /v1/mirn-discovery:
    post:
      summary: MIRN Discovery transaction api
      description: MIRN Discovery transaction api
      operationId: createMirnDiscoveryRequestTransaction
      requestBody:
        description: API for creating MIRN discovery request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MirnDiscoveryRequest'
        required: true
      responses:
        200:
          description: Successfully created mirn discovery transaction request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MirnRequestResult'
        400:
          description: Problem with the input payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MirnRequestResult'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MirnRequestResult'
      tags:
        - Utility
      x-amazon-apigateway-integration:
        payloadFormatVersion: 1.0
        httpMethod: "POST"
        uri: "https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/mirn-discovery"
  "/v1/network/{networkCode}":
    get:
      tags:
        - Utility
      summary: Returns Utility Network details for a customer
      parameters:
        - in: path
          name: networkCode
          required: true
          schema:
            type: string
        - in: query
          name: tariffCombo
          schema:
            type: string
          style: form
          explode: false
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/network/{networkCode}
        requestParameters:
          integration.request.path.networkCode: method.request.path.networkCode
          integration.request.querystring.tariffCombo: method.request.querystring.tariffCombo
      responses:
        '200':
          description: Utility Network details retrieved successfully
          content:
            "application/json":
              schema:
                "$ref": "#/components/schemas/UtilityNetworkDto"
  "/v1/utility/{utilityIdentifier}":
    get:
      parameters:
      - name: serviceType
        in: query
        required: true
        schema:
          type: string
      - name: utilityIdentifier
        in: path
        required: true
        schema:
          type: number
      responses:
        '200':
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SiteDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
                  error:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"
      tags:
        - Utility
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        httpMethod: GET
        uri: https://api-billing.CLASS_NAME.encore.sh/external/api/billing/v1/utility/{utilityIdentifier}
        requestParameters:
          integration.request.path.utilityIdentifier: method.request.path.utilityIdentifier
      x-codegen-request-body-name: body
  /v1/utility/{utilityIdentifier}/service-orders:
    get:
      parameters:
        - in: path
          name: utilityIdentifier
          schema:
            type: string
          required: true
        - in: query
          name: serviceOrderType
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      tags:
        - Utility
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "https://api-mi.CLASS_NAME.encore.sh/external/api/v1/utility/{utilityIdentifier}/serviceOrders"
        payloadFormatVersion: 1.0
        requestParameters:
          integration.request.path.utilityIdentifier: method.request.querystring.utilityIdentifier
          integration.request.querystring.serviceOrderType: method.request.querystring.serviceOrderType
          integration.request.querystring.status: method.request.querystring.status
      responses:
        '200':
          description: "Successful retrieval of service orders."
          content:
            "application/json":
              schema:
                type: object
                properties:
                  utilityIdentifier:
                    type: string
                  serviceOrders: 
                    type: array
                    items:
                      $ref: "#/components/schemas/ServiceOrderDto"
components:
  schemas:
    ErrorResponse:
      title: "ErrorResponse"
      type: object
      properties:
        code:
          type: "integer"
        message:
          type: "string"
        detail:
          type: "string"
    successfulResponse:
      title: "successfulResponse"
      type: object
      properties:
        success:
          type: boolean
    accountCreationSuccessfulResponse:
      title: "accountCreationSuccessfulResponse"
      type: "object"
      properties:
        accountNumber:
          type: "string"
    ExternalApiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Result of api operation
          default: false
        timestamp:
          type: string
          description: Timestamp of api response
        status:
          type: integer
          description: Status of api response
        error:
          type: array
          description: Status of api response
          items:
            $ref: '#/components/schemas/RequestError'
        warnings:
          type: array
          description: Warnings of api response
          items:
            $ref: '#/components/schemas/RequestError'
    AccountBEPLogRequest:
      required:
      - accountNumber
      - brand
      - systemType
      - eventDate
      - description
      type: object
      properties:
        brand:
          type: string
          description: Brand associated with the request
        accountNumber:
          type: string
          description: Account number associated with the request
        systemType:
          type: string
          description: System type
        eventDate:
          type: string
          description: Event date
        eventEndDate:
          type: string
          description: Event end date
        eventType:
          type: string
          description: Event type
          enum:
          - KAYO_VOUCHER
        productName:
          type: string
          description: Product name associated with event
        feature:
          type: integer
          description: Feature associated with event
        description:
          type: string
          description: Description associated with event
        attributes:
          type: array
          items:
            properties:
              key:
                type: string
              value:
                type: string
          description: Attributes associated with the AccountBEP event entry
    AccountBestOfferProducts:
      type: object
      properties:
        serviceType:
          type: string
          enum:
            - GAS
            - ELECTRICITY
        products:
          type: array
          items:
            $ref: "#/components/schemas/BestOfferProduct"
        extrapolatedUsage:
            $ref: "#/components/schemas/BestOfferUsage"
        currentProduct:
          $ref: "#/components/schemas/BestOfferProduct"
    BestOfferProduct:
      type: object
      properties:
        productCode:
          type: string
        bestOfferAmount:
          type: number
        bestOfferAmountInclDiscount:
          type: number
        isBestOffer:
          type: boolean
        availabilityType:
          type: string
    BestOfferUsage:
      type: object
      properties:
        peak:
          type: number
        offPeak:
          type: number
        shoulder:
          type: number
        importGen:
          type: number
        controlledLoad:
          type: number 
        controlledLoad2:
          type: number
    response:
      title: "response"
      type: "object"
      properties:
        success:
          type: "boolean"
        timestamp:
          type: "string"
        status:
          type: "integer"
        error:
          $ref: '#/components/schemas/codeElements'
        warning:
          $ref: '#/components/schemas/codeElements'
    codeElements:
      title: "codeElements"
      type: "object"
      properties:
        code:
          type: "integer"
        message:
          type: "string"
        detail:
          type: "string"
    quoteResponse:
      type: object
      properties:
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        product:
          $ref: '#/components/schemas/Product'
        quoteAmount:
          type: number
        quoteAmountInclDiscount:
          type: number
    invoiceResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Result of api operation
          default: false
        timestamp:
          type: string
          description: Timestamp of api response
        status:
          type: integer
          description: Status of api response
        presignedUrl:
          type: string
          description: presigned url of the invoice
        error:
          type: array
          description: Status of api response
          items:
            $ref: '#/components/schemas/RequestError'
        warnings:
          type: array
          description: Warnings of api response
          items:
            $ref: '#/components/schemas/RequestError'
    usageResponse:
      title: "usageResponse"
      type: "object"
      properties:
        success:
          type: "boolean"
        timestamp:
          type: "string"
        status:
          type: "integer"
        error:
          $ref: '#/components/schemas/codeElements'
        warning:
          $ref: '#/components/schemas/codeElements'
        usagePeriodData:
          $ref: '#/components/schemas/usageDetail'
    linkPaymentRequest:
      title: "requestPayload"
      type: "object"
      required:
        - accountNumber
        - customerNumber
        - brand
        - ddType
        - entityPaymentId
      properties:
        customerNumber:
          title: "CORECustomerNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        accountNumber:
          title: "COREAccountNumber"
          type: "array"
          minItems: 1
          items:
            type: "string"
            maxLength: 50
        ddType:
          type: "string"
          maxLength: 50
          enum:
            - CC
            - Bank
        ccDetails:
          $ref: '#/components/schemas/ccDetails'
        bankDetails:
          $ref: '#/components/schemas/bankDetails'
        entityPaymentId:
          type: "integer"
    ccDetails:
      type: "object"
      required:
        - token
      properties:
        token:
          type: "string"
          maxLength: 50
    bankDetails:
      type: "object"
      required:
        - bankBSB
        - bankAccountNumber
      properties:
        bankBSB:
          type: "string"
          maxLength: 6
        bankAccountNumber:
          type: "string"
          maxLength: 20
    removeSavedPaymentRequest:
      title: "requestPayload"
      type: "object"
      required:
        - customerNumber
        - brand
        - ddType
        - entityPaymentId
      properties:
        customerNumber:
          title: "CORECustomerNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        ddType:
          type: "string"
          maxLength: 50
          enum:
            - CC
            - Bank
        ccDetails:
          $ref: '#/components/schemas/ccDetails'
        bankDetails:
          $ref: '#/components/schemas/bankDetails'
        entityPaymentId:
          type: "integer"
    ddCCDetails:
      properties:
          type:
            type: "string"
            maxLength: 50
            enum:
              - mastercard
              - visa
              - amex
          ddType:
            type: "string"
            maxLength: 50
          token:
            type: "string"
            maxLength: 20
          expiry:
            type: "string"
            maxLength: 20
            description:
              CC Expiry Date
              Format DD/MM/YYYY
          number:
            type: "string"
            maxLength: 20   
          name:
            type: "string"
            maxLength: 100       
    ddBankDetails:
      properties:
          bank:
            type: "string"
            maxLength: 50
          bankBranch:
            type: "string"
            maxLength: 50
          bankBSB:
            type: "string"
            maxLength: 6
          bankAccountNumber:
            type: "string"
            maxLength: 20
    DDRegistrationRequest:
      title: "requestPayload"
      type: "object"
      required:
        - source
        - brand
        - customerNumber
        - entityContactType
        - requestType
        - ddType
      properties:
        brand:
          type: "string"
          maxLength: 50
          description:
            Brand name    
        customerNumber:
          type: "string"
          maxLength: 50
          description:
            customer number to store details for    
        accountNumber:
          type: "array"
          items:
            type: string
            maxLength: 50
          description:
            account numbers associated with the details
        entityContactType:
          type: "string"
          maxLength: 20
          enum:
            - CONTACT_PRIMARY
        requestType:
          type: "string"
          maxLength: 50
          enum:
            - Save
            - Register
        ddType:
          type: "string"
          maxLength: 50
          enum:
            - CC
            - Bank
        ccDetails:
          $ref: '#/components/schemas/ddCCDetails'
        bankDetails:
          $ref: '#/components/schemas/ddBankDetails'
          nullable: true
        source:
          type: "string"
          maxLength: 50
          enum:
            - MY_ACCOUNT
            - IVR
            - WEBSITE
    customerEntry:
      title: "payload"
      type: "object"
      required:
      - systemType
      - brand
      - salesChannel
      - salesPerson
      - salesNumber
      - salesDate
      - entities
      - accounts
      - validation
      properties:
        systemType:
          title: "systemType"
          type: "string"
          maxLength: 50
        brand:
          title: "brand"
          type: "string"
          maxLength: 50
          description: |
            Required
            Identifies whether the account belongs to East Coast or West Coast.
        salesChannel:
          title: "salesChannel"
          type: "string"
          maxLength: 200
          description: "The sales channel who provided the lead for the sale."
        salesPerson:
          title: "salesPerson"
          type: "string"
          maxLength: 256
          description: "Sales Person Name belonging to the Sales Channel."
        salesNumber:
          title: "salesNumber"
          type: "string"
          maxLength: 35
          description: "Unique Sales Identifier from the Sales Tool."
        salesDate:
          title: "salesDate"
          type: "string"
          maxLength: 200
          description: |
            Date of Sale. This is used as the contract start date.
            Format YYYY-MM-DD
        voiceVerificationId:
          title: "voiceVerificationId"
          type: "string"
          maxLength: 255
          description: "Optional identifier for any voice recording conducted during sign up."
          nullable: true
        accountManager:
          title: "accountManager"
          type: string
          maxLength: 255
          description: "Sales Person Name belonging to the Sales Channel."
          nullable: true
        referrerAccountNumber:
          title: "referrerAccountNumber"
          type: "string"
          maxLength: 50
          description: "Used for referral details, and stores Referral Account Number."
          nullable: true
        validation:
          title: "Validation"
          type: object
          description: "Contact Validation"
          nullable: true
          $ref: "#/components/schemas/contactValidation"
        promotionalCode:
          title: "promotionalCode"
          type: "string"
          nullable: true
          maxLength: 50
          description: "The promotional code for the sale."        
        entities:
          description: Array of entities
          type: array
          items:
            $ref: "#/components/schemas/entity"
        accounts:
          description: Array of accounts
          type: array
          items:
            $ref: "#/components/schemas/account"
    FundTransferParams:
      required:
        - accountNumberFrom
        - accountNumberTo
        - transferAmount
      type: object
      properties:
        accountNumberFrom:
          type: string
        accountNumberTo:
          type: string
        transferAmount:
          type: number
    AccountInteractionType:
      enum:
        - ACCOUNT_EVENT
        - PRICING_EVENT
      type: string
    AccountEvent:
      type: object
      properties:
        eventTypeDescription:
          type: string
        eventTypeCode:
          type: string
        eventDate:
          type: string
          format: date
        eventEndDate:
          type: string
          format: date
        eventTerm:
          type: string
        eventDescription:
          type: string
    PricingEvent:
      type: object
      properties:
        pricingEventTypeDescription:
          type: string
        pricingEventTypeCode:
          type: string
        pricingEventDate:
          type: string
          format: date
        pricingEventEndDate:
          type: string
          format: date
        pricingEventDescription:
          type: string
        pricingEventFeatureTypeDescription:
          type: string
        pricingEventFeatureTypeCode:
          type: string
        pricingEventFeatureCalculationMethod:
          type: string
        pricingEventFeatureCalculationValue:
          type: string
    AccountInteraction:
      type: object
      properties:
        interactionType:
          $ref: "#/components/schemas/AccountInteractionType"
        createdDate:
          format: date
          type: string
        accountEvent:
          $ref: "#/components/schemas/AccountEvent"
        accountPricingEvent:
          $ref: "#/components/schemas/PricingEvent"
    PaginatedMetaDto:
      properties:
        totalRecords:
          type: integer
        totalPages:
          type: integer
    AccountInteractionPaginatedResponseDto:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/AccountInteraction"
        meta:
          $ref: "#/components/schemas/PaginatedMetaDto"
    AccountTransactionPaginatedResponseDto:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/AccountTransactionDto"
        meta:
          $ref: "#/components/schemas/PaginatedMetaDto" 
    AccountTransactionDto:
      required:
        - accountNumber
        - transactions
      type: object
      properties:
        accountNumber:
          type: string
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TransactionDto"
    TransactionDto:
      properties:
        transactionType:
          type: string
          enum:
            - ADJUSTMENT
            - INVOICE
            - PAYMENT
        postedDate:
          format: date
          type: string
        createdDate:
          format: date
          type: string
        amount:
          format: double
          type: number
        taxAmount:
          format: double
          type: number
        debitCredit:
          type: string
          enum:
            - DR
            - CR
        allocatedDate:
          format: date
          type: string
        allocatedAmount:
          format: double
          type: number
        exportedToJournal:
          type: boolean
        adjustmentDetails:
          $ref: "#/components/schemas/AdjustmentDto"
        paymentDetails:
          $ref: "#/components/schemas/PaymentDto"
        invoiceDetails:
          $ref: "#/components/schemas/InvoiceDto"
    AdjustmentDto:
      type: object
      properties:
        adjustmentTypeCode:
          type: string
        originalInvoiceNumber:
          type: integer
        advisedInvoiceNumber:
          type: integer
    PaymentDto:
      type: object
      properties:
        paymentMethod:
          type: string
          maxLength: 50
    InvoiceDto:
      type: object
      properties:
        invoiceNumber:
          type: integer
    MoveOutForwardingAddress:
      type: object
      properties:
        addressLine1:
          type: string
          maxLength: 80
          description: First address line
        addressLine2:
          type: string
          maxLength: 80
          description: Second address line
        suburbOrPlaceOrLocality:
          type: string
          maxLength: 46
          description: suburb 
        postcode:
          type: string
          description: post code
        stateOrTerritory:
          type: string
          description: state or territory  
    SafetyQuestions:
      type: object
      properties:
        question1:
          type: boolean
        question2:
          type: boolean
        question3:
          type: boolean
        question4:
          type: boolean
        question5:
          type: boolean
    MoveoutRequest:
      type: "object"
      required:
        - brand
        - accountNumber
        - moveOutDate
      properties:
        brand:
          type: string
          description: Brand Name associated with the request
        accountNumber:
          type: string
          description: Account number to be moved out
        moveOutDate:
          type: string
          description: Date on which move out is to occur
                       Accepts date of format YYYY-MM-DD
          format: date
        deliveryMethod:
          type: string
          description: Delivery method to be updated
          enum:
            - POST
            - EMAIL
        forwardingAddress:
          $ref: "#/components/schemas/MoveOutForwardingAddress"
        remoteDeen:
          $ref: "#/components/schemas/SafetyQuestions"
        salesNumber:
          title: "salesNumber"
          type: "string"
          maxLength: 35
          description: "Unique Sales Identifier from the Sales Tool."
    RefundRequestParams:
      required:
        - accountNumber
        - adjDate
        - payments
      type: object
      properties:
        accountNumber:
          type: integer
          description: Account number to refund against
        adjDate:
          type: string
          description: Adjustment date in format yyyy-MM-dd
        userReason:
          type: string
          description: Free text field to describe the refund reason
        payments:
          type: array
          description: List of payments to refund
          items:
            $ref: '#/components/schemas/RefundPayment'
    RefundPayment:
      required:
        - paymentId
        - amount
      type: object
      properties:
        paymentId:
          type: integer
          description: Unique identifier of the payment to be refunded
        amount:
          type: number
          description: Amount to refund from the selected payment
    CCPaymentRequest:
      title: "requestPayload"
      type: "object"
      required:
        - accountNumber
        - brand
        - transDate
        - settlementDate
        - amount
        - receipt
        - source
      properties:
        accountNumber:
          title: "COREAccountNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        transDate:
          type: "string"
          maxLength: 20
          description:
            Transaction Date
            Format YYYY-MM-DD HH:mm:ss
        settlementDate:
          type: "string"
          maxLength: 20
          description:
            Settlement Date
            Format YYYY-MM-DD HH:mm:ss
        amount:
          type: "string"
        receipt:
          type: "string"
          maxLength: 50
        source:
          type: "string"
          maxLength: 50
          enum:
            - MY_ACCOUNT
            - IVR
            - WEBSITE
        cardType:
          type: "string"
          maxLength: 10
          enum:
          - DEBIT
          - CREDIT
        cardProvider:
          type: "string"
          maxLength: 50
          enum:
          - MASTERCARD
          - AMEX
          - VISA
          - OTHER
    consumerDataRightInteractionResult:
      title: "Response after evaluating a request if its not successful we return errors"
      type: object
      properties:
        receiptId:
          title: "The id of the new inserted event"
          type: "integer"
        errors:
          $ref: '#/components/schemas/externalValidationRequestError'
    externalValidationRequestError:
      title: "Validation errors for requests"
      type: object
      properties:
        code:
          title: "Validation error code"
          type: "integer"
        message:
          title: "Validation error message"
          type: "string"
    consumerDataRightInteractionRequest:
      title: "The payload of the request"
      type: "object"
      required:
        - brand
        - accountNumber
        - interactionType
        - payload
      properties:
        brand:
          title: "Brand Code"
          type: "string"
          enum:
            - "ECMM"
            - "ECCI"
        accountNumber:
          title: "Account Number"
          type: "string"
        interactionType:
          title: "CDR interaction types"
          type: "string"
          enum:
            - "CDR_ACCOUNT_ACCESS"
            - "CDR_SECONDARY_USER_ADDED"
            - "CDR_SECONDARY_USER_REMOVED"
        payload:
          $ref: '#/components/schemas/externalValidationRequestPayload'
    externalValidationRequestPayload:
      title: "Payload with data to pass on the interaction template"
      type: "object"
      properties:
        firstName:
          type: "string"
        name:
          type: "string"
        sender:
          type: "string"
        secondaryName:
          type: "string"
        accountNumber:
          type: "string"
        accountName:
          type: "string"
    QuoteElectricity:
      type: object
      properties:
        networkTariffCodes:
          type: array
          items:
            type: string
            maxLength: 50
        postCode:
          $ref: '#/components/schemas/PostCode'
        jurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        distributor:
          $ref: '#/components/schemas/Distributor'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        usage:
          $ref: '#/components/schemas/QuoteUsage'
        product:
          $ref: '#/components/schemas/Product'
    QuoteGas:
      type: object
      properties:
        postCode:
          $ref: '#/components/schemas/PostCode'
        jurisdiction:
          $ref: '#/components/schemas/Jurisdiction'
        distributor:
          $ref: '#/components/schemas/Distributor'
        startDate:
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
        usage:
          $ref: '#/components/schemas/QuoteUsage'
        product:
          $ref: '#/components/schemas/Product'
    QuoteUsage:
      type: object
      properties:
        peak:
          type: number
        offPeak:
          type: number
        shoulder:
          type: number
        controlled:
          type: number
        solar:
          type: number
        demandValue:
          type: number
    PostCode:
      type: string
      maxLength: 10
    Jurisdiction:
      type: string
      enum:
        - QLD
        - SA
        - VIC
        - ACT
        - NSW
        - TAS
        - WA
        - NT
    Distributor:
      type: string
      maxLength: 50
    Date:
      type: string
      format: date
    Product:
      type: string
      maxLength: 50
    AccountBalance:
      type: object
      properties:
        accountNumber:
          type: string
        totalBalance:
          format: double
          type: number
        dueDate:
          format: date-time
          type: string
        hasCredit:
          type: boolean
        isOverdue:
          type: boolean
        overdueAmt:
          format: double
          type: number
        hasArrearsOnHold:
          type: boolean
        arrearsOnHoldTotal:
          format: double
          type: number
        arrearsOnHoldReviewDate:
          format: date
          type: string
        paymentMethod:
          type: string
        debtAge:
          $ref: "#/components/schemas/DebtAgeDto"
    DebtAgeDto:
      type: object
      properties:
        currTotal:
          type: number
        30Days:
          type: number
        60Days:
          type: number
        90Days:
          type: number
        120Days:
          type: number
        180Days:
          type: number
        365Days:
          type: number
        365PlusDays:
          type: number
    AccountDto:
      description: Data Model for a Customer Account
      type: object
      properties:
        accountNumber:
          type: string
        accountAddresses:
          "$ref": "#/components/schemas/AccountAddressesDto"
        correspondenceDeliveryMethod:
          "$ref": "#/components/schemas/BillDeliveryMethod"
        accountType:
          "$ref": "#/components/schemas/AccountType"
        accountStatus:
          "$ref": "#/components/schemas/AccountStatus"
        detailedAccountStatus:
          "$ref": "#/components/schemas/DetailedAccountStatus"
        accountStatusDate:
          format: date
          description: Date of the Account Status
          type: string
        abn:
          description: Aust Business Number
          type: string
        acn:
          description: Aust Company Number
          type: string
        accountBalanceDuration:
          format: int32
          description: How long since the Account Balance changed
          type: integer
        creditStatus:
          "$ref": "#/components/schemas/CreditStatus"
        hasPaymentExtension:
          description: Whether an account has any payment extensions (1 or more = true)
          type: boolean
        lastPaymentDate:
          format: date
          type: string
        commenceDate:
          format: date
          type: string
        closedDate:
          format: date
          description: When was the account closed?
          type: string
        directDebit:
          "$ref": "#/components/schemas/PaymentMethod"
        salesReferenceNumber:
          description: The Sales Reference Number
          type: string
        business:
          $ref: "#/components/schemas/BusinessDto"
        smoothPay:
          $ref: "#/components/schemas/SmoothPay"
        additionalContacts:
          type: array
          items:
            "$ref": "#/components/schemas/AdditionalContactDto"
        lifeSupport:
          type: object
          properties:
            pathStatus:
              "$ref": "#/components/schemas/LifeSupportRegStatus"
            contactStatus:
              description: Current Life Support Status
              type: boolean
        utilityIdentifier:
          type: string
        serviceType:
          type: string
          enum: [ 'electricity', 'gas' ]
    AccountAddress:
      description: Refresents a Postal Address
      type: object
      properties:
        address1:
          description: The First address line
          type: string
        address2:
          description: The Second address line
          type: string
        address3:
          description: The Third address line
          type: string
        suburb:
          description: Suburb
          type: string
        state:
          description: State in Australia
          type: string
        postcode:
          description: Australian Postcode
          type: string
    BillDeliveryMethod:
      enum:
        - post
        - email
        - call
        - sms
      type: string
    AccountType:
      type: string
      enum:
        - RESIDENTIAL
        - BUSINESS
    AccountStatus:
      enum:
        - new
        - inprogress
        - open
        - closed
        - error
      type: string
    DetailedAccountStatus:
      enum:
        - transferin
        - movein
        - cool
        - transferreq
        - transferack
        - transferpen
        - open
        - opentransferout
        - openmoveout
        - closed
        - closedtransferred
        - closedmoved
        - mktdataerr
        - transferrej
        - transferobj
        - transfercan
        - opendeactive
        - newconnection
        - opentransferoutretro
        - retrotransferin
        - nonfrmp
        - embeddednetwork
        - novation
        - objectedtransferout
      type: string
    CreditStatus:
      enum:
        - standard
        - payplan
        - writeoff
        - dnp
        - invoicedispute
        - noaction
        - deceased
        - multisite
        - pendassist
        - pendhardship
        - hardship
        - accountdispute
        - debtsold
        - suspension
        - insolvency
        - payplanoffer
        - smoothpay
      type: string
    CompanyType:
      enum:
        - incorporation
        - limited_company
        - na
        - partnership
        - private
        - sole_trader
        - trust
        - adminstrator
        - state_government_unlisted_public_unit_trust
        - strata_title
        - state_government_discretionary_trading_trust
        - state_government_fixed_unit_trust
        - super_fund
        - territory_government_public_company
        - territory_government_co_operative
        - territory_government_limited_partnership
        - territory_government_other_unincorporated_entity
        - territory_government_other_incorporated_entity
        - territory_government_pooled_development_fund
        - territory_government_private_company
        - territory_government_strata_title
        - territory_government_public_trading_trust
        - territory_government_corporate_unit_trust
        - territory_government_statutory_authority
        - territory_government_entity
        - territory_government_partnership
        - territory_government_trust
        - other_trust
        - territory_government_apra_regulated_public_sector_fund
        - territory_government_apra_regulated_public_sector_scheme
        - territory_government_non_regulated_super_fund
        - territory_government_cash_management_trust
        - territory_government_discretionary_services_management_trust
        - territory_government_fixed_trust
        - territory_government_hybrid_trust
        - territory_government_discretionary_investment_trust
        - territory_government_listed_public_unit_trust
        - territory_government_unlisted_public_unit_trust
        - territory_government_discretionary_trading_trust
        - territory_government_fixed_unit_trust
        - other_unincorporated_entity
        - apra_regulated_non_public_offer_fund
        - non_regulated_superannuation_fund
        - other_incorporated_entity
        - pooled_development_fund
        - apra_regulated_public_offer_fund
        - unlisted_public_unit_trust
        - australian_private_company
        - pooled_superannuation_trust
        - other_partnership
        - public_trading_trust
        - australian_public_company
        - listed_public_unit_trust
        - small_apra_regulated_fund
        - state_government_public_company
        - state_government_co_operative
        - state_government_limited_partnership
        - state_government_other_unincorporated_entity
        - state_government_other_incorporated_entity
        - state_government_pooled_development_fund
        - state_government_private_company
        - state_government_strata_title
        - state_government_public_trading_trust
        - state_government_corporate_unit_trust
        - state_government_statutory_authority
        - state_government_company
        - state_government_entity
        - state_government_partnership
        - state_government_trust
        - regulated_self_managed_superannuation_fund
        - state_government_apra_regulated_public_sector_fund
        - state_government_apra_regulated_public_sector_scheme
        - state_government_non_regulated_super_fund
        - state_government_cash_management_trust
        - state_government_discretionary_services_management_trust
        - state_government_fixed_trust
        - state_government_hybrid_trust
        - state_government_discretionary_investment_trust
        - state_government_listed_public_unit_trust
        - discretionary_services_management_trust
        - discretionary_trading_trust
        - first_home_saver_accounts_trust
        - family_partnership
        - fixed_unit_trust
        - fixed_trust
        - hybrid_trust
        - individual_sole_trader
        - local_government_public_company
        - local_government_co_operative
        - local_government_limited_partnership
        - local_government_other_unincorporated_entity
        - local_government_other_incorporated_entity
        - local_government_pooled_development_fund
        - local_government_private_company
        - local_government_strata_title
        - local_government_public_trading_trust
        - local_government_corporate_unit_trust
        - local_government_statutory_authority
        - local_government_company
        - local_government_entity
        - local_government_partnership
        - local_government_trust
        - limited_partnership
        - local_government_apra_regulated_public_sector_fund
        - local_government_apra_regulated_public_sector_scheme
        - local_government_non_regulated_super_fund
        - local_government_cash_management_trust
        - local_government_discretionary_services_management_trust
        - local_government_fixed_trust
        - local_government_hybrid_trust
        - local_government_discretionary_investment_trust
        - local_government_listed_public_unit_trust
        - local_government_unlisted_public_unit_trust
        - local_government_discretionary_trading_trust
        - local_government_fixed_unit_trust
        - approved_deposit_fund
        - apra_regulated_fund_fund_type_unknown
        - commonwealth_government_public_company
        - commonwealth_government_co_operative
        - commonwealth_government_limited_partnership
        - commonwealth_government_other_unincorporated_entity
        - commonwealth_government_other_incorporated_entity
        - commonwealth_government_pooled_development_fund
        - commonwealth_government_private_company
        - commonwealth_government_strata_title
        - commonwealth_government_public_trading_trust
        - commonwealth_government_corporate_unit_trust
        - commonwealth_government_statutory_authority
        - commonwealth_government_company
        - commonwealth_government_entity
        - commonwealth_government_partnership
        - commonwealth_government_super_fund
        - commonwealth_government_trust
        - cash_management_trust
        - co_operative
        - commonwealth_government_apra_regulated_public_sector_fund
        - commonwealth_government_apra_regulated_public_sector_scheme
        - commonwealth_government_non_regulated_super_fund
        - commonwealth_government_cash_management_trust
        - commonwealth_government_discretionary_services_management_trust
        - commonwealth_government_fixed_trust
        - commonwealth_government_hybrid_trust
        - commonwealth_government_discretionary_investment_trust
        - commonwealth_government_listed_public_unit_trust
        - commonwealth_government_unlisted_public_unit_trust
        - commonwealth_government_discretionary_trading_trust
        - commonwealth_government_fixed_unit_trust
        - corporate_unit_trust
        - deceased_estate
        - diplomatic_consulate_body_or_high_commission
        - discretionary_investment_trust
      type: string
    IndustryType:
      enum:
        - accommodation
        - unknown
        - food_and_beverage_services
        - property_operators_and_developers
        - administrative_services
        - adult_community_and_other_education
        - agriculture
        - agriculture_forestry_and_fishing_support_service
        - air_and_space_transport
        - aquaculture
        - arts
        - auxiliary_finance_and_insurance_services
        - bakery_product_manufacturing
        - basic_chemical_and_chemical_product_manufacturing
        - basic_material_wholesaling
        - basic_non_ferrous_metal_manufacturing
        - beef_cattle_farming
        - beverage_and_malt_manufacturing
        - beverage_and_tobacco_product_manufacturing
        - broadcasting_except_internet
        - building_cleaning_pest_control_and_other_support
        - building_construction
        - butchers
        - cafes_and_restaurants
        - child_care_services
        - clothing_and_soft_good_retailing
        - clothing_manufacturing
        - clubs_hospitality
        - coal_mining
        - commission_based_wholesaling
        - computer_services
        - computer_system_design_and_related_services
        - construction_material_mining
        - construction_services
        - creative_and_performing_arts_activities
        - crop_and_plant_growing_nec
        - cut_flower_and_flower_seed_growing
        - dairy_cattle_farming
        - dairy_product_manufacturing
        - deer_farming
        - defence
        - department_stores
        - electricity_supply
        - electronic_equipment_manufacturing
        - exploration_and_other_mining_support_services
        - fabricated_metal_product_manufacturing
        - farm_produce_wholesaling
        - finance
        - fishing_hunting_and_trapping
        - food_product_manufacturing
        - food_retailing
        - food_drink_and_tobacco_wholesaling
        - forestry_and_logging
        - fruit_and_vegetable_processing
        - fruit_growing_nec
        - fuel_retailing
        - furniture_and_other_manufacturing
        - furniture_houseware_and_appliance_retai
        - gambling_activities
        - gas_supply
        - glass_and_glass_product_manufacturing
        - government_administration
        - grape_growing
        - grocery_liquor_and_tobacco_product_wholesaling
        - heavy_and_civil_engineering_construction
        - heritage_activities
        - hospitals
        - household_good_wholesaling
        - industrial_machinery_and_equipment_manuf
        - installation_trade_services
        - insurance_and_superannuation_funds
        - internet_publishing_and_broadcasting
        - internet_service_providers_web_search_portals_and_data_processing_services
        - iron_and_steel_manufacturing
        - it
        - kiwi_fruit_growing
        - legal_and_accounting_services
        - library_and_other_information_services
        - life_insurance_and_superannuation_funds
        - livestock_farming_nec
        - machinery_and_equipment_manufacturing
        - machinery_and_equipment_wholesaling
        - meat_and_meat_product_manufacturing
        - medical_and_dental_services
        - medical_and_other_health_care_services
        - metal_ore_mining
        - motion_picture_and_sound_recording_activities
        - motor_repairers
        - motor_vehicle_and_motor_vehicle_parts_retailing
        - motor_vehicle_and_motor_vehicle_parts_wholesaling
        - motor_vehicle_and_part_manufacturing
        - motor_vehicle_retailing
        - non_building_construction
        - non_metallic_mineral_mining_and_quarrying
        - non_metallic_mineral_product_manufacturing
        - non_store_retailing_and_retail_commission_based_buying_and_or_selling
        - office
        - oil_and_gas_extraction
        - other_business_services
        - other_ceramic_product_manufacturing
        - other_construction_services
        - other_education
        - other_financiers
        - other_food_manufacturing
        - other_goods_wholesaling
        - other_health_services
        - other_insurance
        - other_manufacturing
        - other_mining
        - other_mining_services
        - other_non_metallic_mineral_product_manufacturing
        - other_personal_and_household_good_retail
        - other_personal_services
        - other_recreation_services
        - other_services_to_transport
        - other_store_based_retailing
        - other_transport
        - other_wood_product_manufacturing
        - personal_and_household_goods_hiring
        - personal_and_other_services
        - petroleum_and_coal_product_manufacturing
        - pharmacy_chemist
        - polymer_product_and_rubber_product_manufacturing
        - postal_and_courier_pick_up_and_delivery_services
        - preschool_and_school_education
        - primary_metal_and_metal_product_manufacturing
        - printing_including_the_reproduction_of_recorded_media
        - private_households_employing_staff
        - private_households_employing_staff_and_undifferentiated_goods_and_service_producing_activities_of_h
        - professional_scientific_and_technical_services_except_computer_system_design_and_related_services
        - property_operators_and_real_estate_services
        - public_administration
        - public_order_safety_and_regulatory_services
        - publishing_except_internet_and_music_publishing
        - pubs_taverns_and_bars
        - pulp_paper_and_converted_paper_product_manufacturing
        - rail_transport
        - real_estate_agents
        - recreational_good_retailing
        - rental_and_hiring_services_except_real_estate
        - repair_and_maintenance
        - residential_care_services
        - retail_shop
        - road_transport
        - services_to_the_arts
        - sheep_farming
        - sheep_beef_cattle_farming
        - sheet_metal_product_manufacturing
        - social_assistance_services
        - specialised_food_retailing
        - sports_and_recreation_activities
        - storage
        - supermarket_and_grocery_stores
        - technical_services
        - telecommunications_services
        - tertiary_education
        - textile_leather_clothing_and_footwear_manufacturing
        - timber_and_hardware_goods_wholesaling
        - transport_equipment_manufacturing
        - transport_support_services
        - travel_agency_and_tour_arrangement_services
        - vegetable_growing
        - veterinary_services
        - warehousing_and_storage_services
        - waste_collection_treatment_and_disposal_services
        - water_supply_sewerage_and_drainage_services
        - water_transport
        - wood_product_manufacturing
      type: string
    AdditionalContactDto:
      description: Represents a Secondary Contact
      type: object
      properties:
        customerNumber:
          description: Customer Number
          type: string
        relationType:
          "$ref": "#/components/schemas/RelationType"
        title:
          description: Title for the Customer
          type: string
        firstName:
          description: First Name
          type: string
        initials:
          description: Initials
          type: string
        lastName:
          description: Last Name
          type: string
        dateOfBirth:
          format: date
          description: DOB
          type: string
        contacts:
          "$ref": "#/components/schemas/Contacts"
        contactMethod:
          "$ref": "#/components/schemas/ContactMethod"
    PlanItem:
      type: object
      properties:
        uom:
          type: string
        planItemSortOrder:
          type: integer
        planItemInvoiceDescription:
          type: string
        planItemTypeCode:
          type: string
        planItemTypeDescription:
          type: string
        rateExcGST:
          type: number
        rateIncGST:
          type: number
        stepStart:
          type: number
        stepEnd:
          type: number
        stepFrequency:
          type: string
        stepRateFrequency:
          type: string
        planStartDate:
          type: string
          format: date
        planEndDate:
          type: string
          format: date
        rateWDiscountExcGST:
          type: number
        rateWDiscountIncGST:
          type: number
        season:
          type: string
          enum:
            - SUMMER
            - NONSUMMER
        timeClass:
          $ref: "#/components/schemas/TimeClass"
        timeClassSortOrder:
          type: integer
        timeSetInvoiceDescription:
          type: string
    TimeClass:
      type: string
    VersionSetsDto:
      type: object
      properties:
        planVersionSetName:
          type: string
        planVersionSetStartDate:
          type: string
          format: date
        pricing:
          type: array
          items:
            $ref: "#/components/schemas/PlanItem"
    AccountPricesDto:
      type: array
      items:
        $ref: "#/components/schemas/AccountPricingDto"
    AccountPricingDto:
      type: object
      properties:
        accountNumber:
          type: string
        accountPricingEffectiveStart:
          type: string
          format: date
        accountPricingEffectiveEnd:
          type: string
          format: date
        accountType:
          $ref: "#/components/schemas/AccountType"
        serviceType:
          $ref: "#/components/schemas/ServiceType"
        product:
          $ref: "#/components/schemas/AccountPricingProductDto"
    AccountPricingProductDto:
      type: object
      properties:
        productCode:
          type: string
        productDescription:
          type: string
        productDisplayName:
          type: string
        productMarketType:
          type: string
        productStatus:
          type: string
        productTermMonths:
          type: number
        tariffCombo:
          type: array
          items:
            type: string
        tariffDescription:
          type: array
          items:
            type: string
        networkCode:
          type: string
        networkDescription:
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/Feature"
        productAdvice:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdvice"
        planVersionSets:
          type: array
          items:
            $ref: "#/components/schemas/VersionSetsDto"
    Feature:
      type: object
      properties:
        featureDescription:
          type: string
        featureTerm:
          type: string
        featureTypeCode:
          type: string
        featureTypeDescription:
          type: string
        featureCalculationMethod:
          type: string
        featureCalculationValue:
          type: number
        featureFilterValue:
          type: string
    ProductAdvice:
      type: object
      properties:
        volume:
          type: number
        accountType:
          $ref: "#/components/schemas/AccountType"
        regulatedStatus:
          type: string
          enum:
            - REGULATED
            - RETAILER_DEFINED
        totalAmount:
          type: number
        referenceTotalAmount:
          type: number
        percentDifference:
          type: number
        totalAmountIncDiscount:
          type: number
        percentageDifferenceIncDiscount:
          type: number
        controlledLoad:
          type: boolean
        productAdviceStartDate:
          type: string
          format: date
        productAdviceEndDate:
          type: string
          format: date
    ServiceType:
      type: string
      enum:
        - GAS
        - ELECTRICITY
    ElectricityMeterRead:
      type: object
      properties:
        meterSerial:
          type: string
        registerId:
          type: string
        suffixId:
          type: string
        readDate:
          type: string
          format: datetime
        readValue:
          type: number
        qualityMethod:
          type: string
        reasonCode:
          type: string
        reasonDescription:
          type: string
    GasMeterRead:
      type: object
      properties:
        meterSerial:
          type: string
        registerId:
          type: string
        suffixId:
          type: string
        readDate:
          type: string
          format: datetime
        readValue:
          type: number
        qualityMethod:
          type: string
        reasonCode:
          type: string
        reasonDescription:
          type: string
        pressureCorrectionFactor:
          type: number
        heatingValue:
          type: number
    AccountBestOfferDto:
      type: object
      properties:
        accountNumber:
          type: string
          example: "string"
        calculationDate:
          type: string
          format: date
        invoiceDate:
          type: string
          format: date
        invoiceNumber:
          type: string
          example: "string"
        calculationMethod:
          type: string
          example: "string"
        currentProductName:
          type: string
          example: "string"
        currentProductDescription:
          type: string
          example: "string"
        currentEstimatedAnnualCost:
          type: integer
          example: 0
        bestOfferProductName:
          type: string
          example: "string"
        bestOfferProductDescription:
          type: string
          example: "string"
        bestOfferEstimatedAnnualCost:
          type: integer
          example: 0
        savingsOnEstimatedAnnualCost:
          type: integer
          example: 0
        comparedProductsCount:
          type: integer
          example: 0
        alreadyInBestOffer:
          type: boolean
          example: true
    SiteAddressDto:
      description: Refresents a Postal Address
      type: object
      properties:
        dpid:
          type: number
        lotNumber:
          description: Lot Number
          type: string
        computedAddress:
          description: Address Computed by CORE
          type: string
        floorNumber:
          description: Floor Number
          type: string
        floorType:
          description: Floor Type
          type: string
        unitNumber:
          description: Unit Number
          type: string
        unitType:
          description: Unit Type
          type: string
        houseNumber:
          description: House Number
          type: string
        houseNumberSuffix:
          description: House Number Suffix
          type: string
        houseNumberTwo:
          description: House Number
          type: string
        houseNumberTwoSuffix:
          description: House Number Suffix
          type: string
        location:
          type: string
        streetName:
          description: Street Name
          type: string
        streetType:
          description: Type fo the Street
          type: string
        suburb:
          description: Suburb
          type: string
        state:
          description: Australian State
          type: string
        postcode:
          description: Australian Postcode
          type: string
        propertyName:
          description: Name of the Property
          type: string
        address1:
          description: First Address line
          type: string
        address2:
          description: Second Address line
          type: string
        address3:
          description: Third Address line
          type: string
    CustomerAccountDto:
      description: Data Model for a Customer Account
      type: object
      properties:
        customerNumber:
          type: string
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/AccountSummary"
    AccountSummary:
      type: object
      properties:
        accountNumber:
          type: string
        serviceType:
          type: string
          enum: [ 'electricity', 'gas' ]
        accountType:
          $ref: "#/components/schemas/AccountType"
        accountStatus:
          $ref: "#/components/schemas/AccountStatus"
        commenceDate:
          format: date
          type: string
        closedDate:
          format: date
          description: When was the account closed?
          type: string
        utilityIdentifier:
          type: string
        productCode:
          type: string
        siteAddress:
          $ref: "#/components/schemas/SiteAddressDto"
    IdentityType:
      enum:
        - driver
        - medicare
        - passport
      type: string
    EntityIdentityDto:
      description: Identity details
      type: object
      properties:
        identityType:
          "$ref": "#/components/schemas/IdentityType"
        value:
          description: drivers license number | medicare number (including irn) | passport number
          type: string
        expiryDate:
          format: date-time
          description: Optional expiry date of the identity type
          type: string
        medicareCard:
          type: object
          properties:
            medicareCardColour:
              description: Only applicable when identity type is medicare
              type: string
        driversLicense:
          type: object
          properties:
            licenseState:
              description: Only applicable when identity type is license
              type: string
        passport:
          type: object
          properties:
            passportCountry:
              description: Only applicable when identity type is passport
              type: string
            passportCountryCode:
              description: Only applicable when identity type is passport
              type: string
    CustomerIdentityDto:
      description: Represents the top level Customer Profile details
      type: object
      properties:
        customerNumber:
          type: string
        customerIdentities:
          type: array
          items:
            "$ref": "#/components/schemas/EntityIdentityDto"
    CustomerDto:
      description: Represents the top level Customer Profile details
      type: object
      properties:
        customerNumber:
          description: Unique Number for the Customer
          type: string
        title:
          description: Title for the Customer
          type: string
        firstName:
          description: First Name
          type: string
        initials:
          description: Initials
          type: string
        lastName:
          description: Last Name
          type: string
        dateOfBirth:
          format: date
          description: DOB
          type: string
        contacts:
          "$ref": "#/components/schemas/CustomerContacts"
        contactMethod:
          "$ref": "#/components/schemas/ContactMethod"
        marketingConsent:
          "$ref": "#/components/schemas/AllowPromotionsType"
        deceased:
          description: Are they Alive or Dead
          type: boolean
        vulnerable:
          description: Vulnerable
          type: boolean
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
        concessions:
          description: Concessions
          type: array
          items:
            "$ref": "#/components/schemas/ConcessionDto"
    CustomerContacts:
      type: object
      properties:
        mobilePhone:
          type: string
        landlinePhone:
          type: string
        primaryEmail:
          type: string
        secondaryEmail:
          type: string
        faxPhone:
          type: string
        ccEmail:
          type: string
        vulnerableSecureMobile:
          type: string
        vulnerableSecureLandline:
          type: string
        vulnerableSecureEmail:
          type: string
    ContactMethod:
      enum:
        - post
        - email
        - phone
        - sms
      type: string
    AllowPromotionsType:
      enum:
        - yes
        - no
        - no_digital
      type: string
    ConcessionCardType:
      enum:
        - none
        - pcc
        - hcc
        - dvapcc
        - cshc
        - dvagc
        - dvagC_TPI
        - dvagC_WW
        - dvagC_EDA
        - imm
        - qgsc
        - sa
      type: string
    LifeSupportMachineType:
      enum:
        - pwfq
        - ocft
        - efp
      type: string
    ConcessionDto:
      description: Concession information
      type: object
      properties:
        concessionCardType:
          "$ref": "#/components/schemas/ConcessionCardType"
        firstName:
          description: First Name
          type: string
        initials:
          description: Initials
          type: string
        lastName:
          description: Last Name
          type: string
        cardNumber:
          description: Concession Card Number
          type: string
        startDate:
          format: date
          description: Date that the Concession Started
          type: string
        endDate:
          format: date
          description: Date that the Concession Ended
          type: string
        validationStatus:
          type: string
          enum:
            - UNKNOWN
            - PENDING
            - VALID
            - REJECTED
            - ARCHIVED
            - NOCONSENT
        expiryDate:
          format: date
          description: Expiry Date for the Concession Card
          type: string
        accountNumbers:
          type: array
          items:
            type: string
            maxItems: 2
        effectiveEndDate:
          format: date
          description: Date that the Concession ends
          type: string
        lifeSupportMachineType:
          "$ref": "#/components/schemas/LifeSupportMachineType"
    CreditCardDetails:
      description: Credit card details to associate with the account
      type: object
      properties:
        entityPaymentId:
          type: integer
          description: Unique identifier for the record
        expiry:
          format: date
          description: Populate this as the last day of the expiry month/year being captured eg. 31/Jul/2022
          type: string
        name:
          description: "MyAccount expects the field 'Name on Card' to also be provided for storing card information as these can be\r\nmodified by user on Update flow"
          type: string
        number:
          description: Credit Card Number expected to be masked number with only last digits visible
          type: string
        type:
          type: string
        hasExpired:
          description: Field to show if the credit card has expired or not
          type: boolean
        token:
          type: string
    GetCustomerBankDetails:
      description: Bank details to associate with the account
      type: object
      properties:
        entityPaymentId:
          type: integer
          description: Unique identifier for the record
        bank:
          description: This can be code/name. The system expects this to be free text field with no business validation
          type: string
        bankAccountNumber:
          description: Account number
          type: string
        bankBSB:
          description: BSB number for the account
          type: string
        bankBranch:
          description: This can be code/name. The system expects this to be free text field with no business validation
          type: string
    PaymentMethod:
      description: Direct debit details for an account
      type: object
      properties:
        ccDetails:
          $ref: '#/components/schemas/CreditCardDetails'
        bankDetails:
          $ref: '#/components/schemas/GetCustomerBankDetails'
    InvoiceDetailDto:
      type: object
      properties:
        invoiceNumber:
          type: number
        accountNumber:
          type: string
        issueDate:
          format: date
          type: string
        dueDate:
          format: date
          type: string
        initialDueDate:
          format: date
          type: string
        fromDate:
          format: date
          type: string
        toDate:
          format: date
          type: string
        usageAmount:
          type: number
        invoiceAmount:
          format: double
          type: number
        gstAmount:
          format: double
          type: number
        dueDateExtendCount:
          format: int32
          type: integer
        hasPaymentExtension:
          type: boolean
        invoiceStatus:
          type: string
          enum: [ 'due', 'paid', 'overdue' ]
        invoiceFilename:
          type: string
        balanceAtIssue:
          type: number
        electricity:
          $ref: "#/components/schemas/Electricity"
        gas:
          $ref: "#/components/schemas/Gas"
    Electricity:
      type: object
      properties:
        summary:
          properties:
            totalUsageCharges:
              type: number
            totalSupplyCharges:
              type: number
            totalGenerationCredit:
              type: number
            totalOtherCharges:
              type: number
        lineItems:
          type: object
          properties:
            usage:
              type: array
              items:
                $ref: "#/components/schemas/InvoiceDetailLineItemDto"
            supply:
              type: array
              items:
                $ref: "#/components/schemas/InvoiceDetailLineItemDto"
            generationCredit:
              type: array
              items:
                $ref: "#/components/schemas/InvoiceDetailLineItemDto"
            other:
              type: array
              items:
                $ref: "#/components/schemas/OtherDetailLineItemDto"
    Gas:
      type: object
      properties:
        summary:
          properties:
            totalUsageCharges:
              type: number
            totalSupplyCharges:
              type: number
            totalOtherCharges:
              type: number
        lineItems:
          type: object
          properties:
            usage:
              type: array
              items:
                $ref: "#/components/schemas/InvoiceDetailLineItemDto"
            supply:
              type: array
              items:
                $ref: "#/components/schemas/InvoiceDetailLineItemDto"
            other:
              type: array
              items:
                $ref: "#/components/schemas/OtherDetailLineItemDto"
    InvoiceDetailLineItemDto:
      type: object
      properties:
        lineItemDescription:
          type: string
        category:
          $ref: "#/components/schemas/LineItemCategory"
        timeClass:
          $ref: "#/components/schemas/TimeClass"
        planItemType:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        quantity:
          type: number
        rate:
          type: number
        multiplier:
          type: number
        unitOfMeasure:
          type: string
        amount:
          type: number
        gstAmount:
          type: number
        discountNet:
          type: number
    LineItemCategory:
      type: string
      enum:
        - RETAIL
        - NETWORK
        - MARKET
        - ADJUSTMENT
        - FEATURE
        - ADJUSTMENT_AGED
        - METER
        - ROUNDING
        - CONCESSION
    TimeClassEnum:
      type: string
      enum:
        - PEAK
        - OFFPEAK
        - ANYTIME
        - SHOULDER
        - SUMMER
        - WINTER
        - IMPORT
        - CONTROLLED
        - CONTROLLED2
        - IMPORTPK
        - IMPORTOP
        - IMPORTSH
        - HOTWATER
        - CONTROLLEDPK
        - CONTROLLEDOP
        - CONTROLLEDSH
        - CONTROLLED3
    OtherDetailLineItemDto:
      type: object
      properties:
        lineItemDescription:
          type: string
        category:
          $ref: "#/components/schemas/LineItemCategory"
        timeClass:
          $ref: "#/components/schemas/TimeClassEnum"
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        quantity:
          type: number
        rate:
          type: number
        multiplier:
          type: number
        amount:
          type: number
        gstAmount:
          type: number
        discountNet:
          type: number
    getInvoiceUrlRequest:
      required:
      - invoiceName
      - expirationTime
      type: object
      properties:
        invoiceName:
          type: string
          description: invoiceId
        expirationTime:
          type: integer
          description: expirationTime In Seconds
    InvoicesResponseDto:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/InvoicesDto"
        meta:
          type: object
          properties:
            totalRecords:
              type: number
            totalPages:
              type: number
    InvoicesDto:
      type: object
      properties:
        accountNumber:
          type: string
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceSummaryDto"
    InvoiceSummaryDto:   
      type: object
      properties:
        invoiceNumber:
          type: string
        issueDate:
          format: date
          type: string
        dueDate:
          format: date
          type: string
        initialDueDate:
          format: date
          type: string
        fromDate:
          format: date
          type: string
        toDate:
          format: date
          type: string
        usageAmount:
          type: number
        invoiceAmount:
          format: double
          type: number
        gstAmount:
          format: double
          type: number
        allocatedAmount:
          format: double
          type: number
        discountAmount:
          format: double
          type: number
        dueDateExtendCount:
          format: int32
          type: integer
        hasPaymentExtension:
          type: boolean
        invoiceStatus:
          type: string
          enum: [ 'due', 'paid', 'overdue' ]
        invoiceFilename:
          type: string
    UtilityNetworkDto:
      description: The data to be returned to the client to retrieve Utility Network
        details
      type: object
      properties:
        networkCode:
          description: The Unique Name of the Utility Network
          type: string
        description:
          description: The Name of the Utility Network
          type: string
        jurisdictionName:
          description: The Jurisdiction Name
          type: string
        jurisdictionDescription:
          description: The Jurisdiction Description
          type: string
        identifierPrefixes:
          description: The Identifier Prefix
          type: array
          items:
            type: string
        faultPhone:
          description: The Fault Phone
          type: string
        active:
          description: Is the Utility Active
          type: boolean
        retailTimezone:
          description: The Retail Timezone
          type: string
        networkTimezone:
          description: The Network Timezone
          type: string
        embedded:
          description: Is it an Embedded Network
          type: boolean
        defaultEnMeterInstallFee:
          format: float
          description: Default Install Fee
          type: number
        accelerateNsrdDayThreshold:
          format: int32
          description: THe Accelerate Nsrd Day Threshold
          type: integer
        qualityMethodOverride:
          description: The Quality Method Override
          type: string
        serviceTypeName:
          description: Name of the Service Type
          type: string
        serviceTypeDescription:
          description: Description of the Service Type
          type: string
        tariffDescription:
          type: array
          items:
            type: string
    AdviceProductDto:
      type: object
      properties:
        productCode:
          type: string
        productDescription:
          type: string
        productDisplayName:
          type: string
        productAvailability:
          type: string
        productAvailabilityStartDate:
          type: string
          format: date
        productAvailabilityEndDate:
          type: string
          format: date
        productMarketType:
          type: string
        productStatus:
          type: string
        productJurisdiction:
          $ref: "#/components/schemas/Jurisdiction"
        productTermMonths:
          type: integer
        serviceType:
          type: string
          enum:
            - GAS
            - ELECTRICITY
        tariffDescription:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/Feature"
        productAdvice:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdviceDto"   
    ProductAdviceDto:
      type: object
      properties:
        volume:
          type: number
        accountType:
          type: string
          enum:
            - RESIDENTIAL
            - BUSINESS
        regulatedStatus:
          type: string
          enum:
            - REGULATED
            - RETAILER_DEFINED
        totalAmount:
          type: number
        referenceTotalAmount:
          type: number
        percentDifference:
          type: number
        totalAmountIncDiscount:
          type: number
        percentageDifferenceIncDiscount:
          type: number
        controlledLoad:
          type: boolean
        productAdviceStartDate:
          type: string
          format: date
        productAdviceEndDate:
          type: string
          format: date
        networkCode:
          type: string
        networkDescription:
          type: string 
    ProductDto:
      type: object
      properties:
        productCode:
          type: string
        productDescription:
          type: string
        productDisplayName:
          type: string
        productAvailability:
          $ref: "#/components/schemas/AvailabilityType"
        productAvailabilityStartDate:
          type: string
          format: date
        productAvailabilityEndDate:
          type: string
          format: date
        productMarketType:
          type: string
        productStatus:
          type: string
        productJurisdiction:
          $ref: "#/components/schemas/Jurisdiction"
        productTermMonths:
          type: integer
        serviceType:
          type: string
          enum:
            - GAS
            - ELECTRICITY
        accountType:
          $ref: "#/components/schemas/AccountType"
        features:
          type: array
          items:
            $ref: "#/components/schemas/Feature"
    AvailabilityType:
      type: string
    ProductPricingProductDto:
      type: object
      properties:
        productCode:
          type: string
        productDescription:
          type: string
        productDisplayName:
          type: string
        productAvailability:
          $ref: "#/components/schemas/AvailabilityTypeEnum"
        productAvailabilityStartDate:
          type: string
          format: date
        productAvailabilityEndDate:
          type: string
          format: date
        productMarketType:
          type: string
        productStatus:
          type: string
        productJurisdiction:
          $ref: "#/components/schemas/Jusrisdiction"
        productTermMonths:
          type: integer
        serviceType:
          type: string
          enum:
            - GAS
            - ELECTRICITY
        tariffCombo:
          type: array
          items:
            type: string
        tariffDescription:
          type: array
          items:
            type: string
        networkCode:
          type: string
        networkDescription:
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/Feature"
        productAdvice:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdvice"
        planVersionSets:
          type: array
          items:
            $ref: "#/components/schemas/VersionSetsDto"
    AvailabilityTypeEnum:
      type: string
      enum:
        - AVAILABLE
        - RESTRICTED
        - CONDITIONAL
    Jusrisdiction:
      type: string
      enum:
        - QLD
        - NSW
        - VIC
        - SA
        - ACT
        - NT
        - TAS
        - WA
    ServiceOrderDto:
      type: object
      properties:
        serviceOrderType:
          type: string
        serviceOrderSubType:
          type: string
        serviceOrderNumber:
          type: string
        status:
          type: string
        xmlTransactionId:
          type: string
        chargeTo:
          type: string
        creationDateTime:
          type: string
          format: date-time
        proposedDate:
          type: string
          format: date
        completionDate:
          type: string
          format: date
    InvoiceUsageDetail:
      type: object
      properties:
        accountNumber:
          type: "string"
          maxLength: 50
        usageItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceUsageItems'
    InvoiceUsageItems:
      type: object
      properties:
        timeClass:
          type: "string"
          maxLength: 50
        invoiceNumber:
          type: "integer"
        startDate:
          type: "string"
          maxLength: 20
          description:
            CC Expiry Date
            Format DD/MM/YYYY
        endDate:
          type: "string"
          maxLength: 20
          description:
            CC Expiry Date
        usageQuantity:
          type: "number"
          format: "double"
        uom:
          type: "string"
        usageAmount:
          type: "number"
          format: "double"
        taxAmount:
          type: "number"
          format: "double"
        readQuality:
          type: "string"
          enum:
            - Actual
            - Estimate
            - Mixed
        isGeneration:
          type: "boolean"
    usageDetail:
      type: object
      properties:
        accountId:
          type: "string"
          maxLength: 50
        usageList:
          type: array
          items:
            $ref: '#/components/schemas/usageItems'
    usageItems:
      type: object
      properties:
        timeClass:
          type: "string"
          maxLength: 50
        invoiceID:
          type: "integer"
        startDate:
          type: "string"
          maxLength: 20
          description:
            CC Expiry Date
            Format DD/MM/YYYY
        endDate:
          type: "string"
          maxLength: 20
          description:
            CC Expiry Date
        billedUsageQuantity:
          type: "number"
          format: "double"
        currentUsageQuantity:
          type: "number"
          format: "double"
        planItemTypeID:
          type: "integer"
        timeClassID:
          type: "integer"
        readQuality:
          type: "string"
          enum:
            - Actual
            - Estimate
            - Mixed
        isSolar:
          type: "boolean"
        netamount:
          type: "number"
        taxAmount:
          type: "number"
    InsertEntityRequest:
      title: "requestPayload"
      type: "object"
      required:
        - accountNumber
        - brand
        - relationType
        - firstName
        - lastName
      properties:
        accountNumber:
          title: "COREAccountNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        relationType:
          enum:
            - "CONTACT_SECOND"
          maxLength: 20
        dob:
          title: "date of birth"
          type: "string"
          maxLength: 10
          description: |
            `Mandatory` where relationType = `CONTACT_SECOND`
            Contact Person Date Of Birth.
            Data Type: date
            Format YYYY-MM-DD
        salutation:
          title: "salutation"
          type: "string"
          maxLength: 20
          description: "Eg: Mr, Ms, Mrs, Dr etc."
        firstName:
          title: "firstName"
          type: "string"
          maxLength: 150
          description: "Contact Person First Name."
        lastName:
          title: "lastName"
          type: "string"
          maxLength: 150
          description: "Contact Person Last Name."
        initials:
          title: "initials"
          type: "string"
          maxLength: 150
          description: "Contact Person initials."
        primaryEmail:
          $ref: '#/components/schemas/email'
        secondaryEmail:
          $ref: '#/components/schemas/email'
        mobilePhone:
          $ref: '#/components/schemas/phone'
        landlinePhone:
          $ref: '#/components/schemas/phone'
        faxPhone:
          $ref: '#/components/schemas/phone'
        contactMethod: ##customers preferred contact method
          type: "string"
          enum:
            - "PHONE" #contact via a call (mobile or landline)
            - "EMAIL" #contact via primary email
            - "SMS" # contact via sms
          maxLength: 10
        allowMarketing:
          type: "string"
          enum:
            - "YES"
            - "NO"
        myAccountRegistered:
          type: "boolean"
    email:
      type: "string"
      maxLength: 500
    phone:
      type: "string"
      maxLength: 10
    insertInteractionRequest:
      title: "requestPayload"
      type: "object"
      required:
        - accountNumber
        - brand
        - interactions
      properties:
        accountNumber:
          title: "COREAccountNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        interactions:
          description: List of interactions to be inserted
          type: "array"
          minItems: 1
          items:
            $ref: '#/components/schemas/Interaction'         
    Interaction:
      title: "Interaction request object"
      type: "object"
      required:
        - interactionType
        - interactionDate
        - details
      properties:
        interactionType:
          type: "string"
          maxLength: 50
          description:
            Interaction Type
        interactionDate:
          type: "string"
          maxLength: 20
          description:
            Interaction Date
            Format YYYY-MM-DD HH:mm:ss
        details:
          type: "string"
    MirnRequestResult:
      type: object
      properties:
        status:
          type: integer
        success:
          type: boolean
          default: false
        timestamp:
          type: string
        error:
          type: array
          items:
            $ref: '#/components/schemas/MirnRequestError'
        warning:
          type: array
          items:
            $ref: '#/components/schemas/MirnRequestError'
        payload:
          $ref: '#/components/schemas/Payload'
    MirnRequestError:
      type: object
      properties:
        code:
          type: integer
        detail:
          type: string
        message:
          type: string
    Payload:
      type: object
      properties:
        id:
          type: integer
    MirnDiscoveryRequest:
      required:
      - utilityNetwork
      - jurisdictionCode
      - stateOrTerritory
      - streetName
      - streetType
      - suburbOrPlaceOrLocality
      type: object
      properties:
        utilityNetwork:
          type: string
          description: Utility network of the request
          maxLength: 50       
        flatOrUnitType:
          type: string
          description: Flat or Unit type of request address
          maxLength: 4
        flatOrUnitNumber:
          type: string
          description: Unit number of request address
          maxLength: 20
        floorOrLevelNumber:
          type: string
          description: Floor or level number of request address
          maxLength: 20
        floorOrLevelType:
          type: string
          description: Floor or level type of request address
          maxLength: 2
        lotNumber:
          type: string
          description: Lot number of request address
          maxLength: 20
        houseNumber:
          type: string
          description: House number of request address
          maxLength: 10
        houseNumberSuffix:
          type: string
          description: House number suffix of request address
          maxLength: 5
        streetName:
          type: string
          description: Street name of request address
          maxLength: 50
        streetSuffix:
          type: string
          description: Street suffix of request address
          maxLength: 2
        streetType:
          type: string
          description: Street type of request address
          maxLength: 4
        suburbOrPlaceOrLocality:
          type: string
          description: Suburb or locality of request address
          maxLength: 100
        stateOrTerritory:
          type: string
          description: State or territory of request address
          maxLength: 3
        postcode:
          type: integer
          description: Post code of request address
        buildingOrPropertyName:
          type: string
          description: Building or property name of request address
          maxLength: 30
        locationDescriptor:
          type: string
          description: Location descriptor of request address
          maxLength: 30
        jurisdictionCode:
          type: string
          description: Jurisdiction Code of request
          maxLength: 3
    concessionCardRequest:
      title: "requestPayload"
      type: "object"
      required:
        - customerNumber
        - accountNumber
        - brand
        - consent
        - firstName
        - lastName
        - cardNumber
        - cardType
      properties:
        customerNumber:
          type: string
        brand:
          type: string
        accountNumber:
          type: array
          items: 
            type: string
            maxLength: 50
        consent:
          type: boolean
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        cardNumber:
          type: string
          maxLength: 20
        backDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        medicalCooling:
          type: boolean
        cardType:
          type: string
          enum:
            - PCC
            - HCC
            - DVAPCC
            - CSHC
            - DVAGC
            - DVAGC_TPI
            - DVAGC_WW
            - DVAGC_EDA
            - IMM
            - QGSC
            - LIHCC
    CorePaymentExtensionRequest:
      required:
      - accountNumber
      - brand
      - invoiceExtendedDueDate
      - invoiceInitialDueDate
      - invoiceNumber
      type: object
      properties:
        brand:
          type: string
          description: Brand associated with the request
        accountNumber:
          type: string
          description: Account number associated with the request
        invoiceNumber:
          type: integer
          description: Invoice number of payment to be extended
        invoiceInitialDueDate:
          type: string
          description: Invoice initial due date
          format: date
        invoiceExtendedDueDate:
          type: string
          description: Invoice extension due date
          format: date
    ProductChangeRequest:
      title: "requestPayload"
      type: "object"
      required:
      - accountNumber
      - productName
      - startDate
      - brand
      - salesNumber
      - salesDate
      - salesPerson
      - salesChannel
      properties:
        accountNumber:
          title: "COREAccountNumber"
          type: "string"
          maxLength: 10
        productName:
          title: "productName"
          type: "string"
          maxLength: 50
          description: |
            Product Name in the sales contract or renewal contract.
            No Multisite Products allowed via this API
        startDate:
          title: "startDate"
          type: "string"
          maxLength: 10
          description: |
            Product change start date.
            Format YYYY-MM-DD
        brand:
          title: "Brand Code"
          type: "string"
          enum:
          - "ECMM"
          - "ECCI"
        salesDate:
          title: "salesDate"
          type: "string"
          maxLength: 10
          description: |
            Product change start date.
            Format YYYY-MM-DD
        salesPerson:
          title: "salesPerson"
          type: "string"
          maxLength: 50
          description: "Sales Person Full Name"
        salesChannel:
          title: "salesChannel"
          type: "string"
          maxLength: 50
          description: "Sales Channel"
        salesNumber:
          title: "salesNumber"
          type: "string"
          maxLength: 50
          description: "Sales Number Reference"
        promotionalCode:
          title: "promotionalCode"
          type: "string"
          nullable: true
          maxLength: 50
          description: "The promotional code for the sale."
        employeeNumber:
          title: "employeeNumber"
          type: "string"
          nullable: true
          maxLength: 20
          description: "Populated if customer is an Alinta employee. Only relevant for CONTACT_PRIMARY contacts."
    RemoveContactRequest:
      title: "requestPayload"
      type: "object"
      required:
        - customerNumber
        - accountNumber
        - brand
        - relationType
        - action
      properties:
        customerNumber:
          title: "CORECustomerNumber"
          type: "string"
          maxLength: 50
        accountNumber:
          title: "COREAccountNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        relationType:
          type: "string"
          maxLength: 20
          enum:
            - CONTACT_SECOND
        action:
          type: "string"
          maxLength: 20
          enum:
            - REMOVE
    CustomerNumbers:
      type: object
      properties:
        customerNumbers:
          items:
            type: string
    MeterRead:
      type: object
      required:
        - meterSerial
        - registerId
        - readValue
      properties:
        meterSerial:
          type: string
        registerId:
          type: string
        suffixId:
          type: string
        readValue:
          type: number
    UpdateAccountRequest:
      title: "requestPayload"
      type: "object"
      required:
        - accountNumber
        - brand
      properties:
        accountNumber:
          title: "COREAccountNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        postalAddress:
          $ref: '#/components/schemas/postalAddress'
        forwardingAddress:
          $ref: '#/components/schemas/postalAddress'
        paymentMethod:
          title: "paymentMethod"
          type: "string"
          maxLength: 50
          enum:
            - CASH
          description: "Payment Method"
        deliveryMethod:
          title: "deliveryMethod"
          type: "string"
          maxLength: 50
          enum:
            - POST
            - EMAIL
          description: "Deliver Method"
        quarterlyBilling:
          type: "boolean"
    postalAddress:
      title: "postalAddress"
      type: "object"
      required:
        - addressLine1
        - suburbOrPlaceOrLocality
        - postcode
        - stateOrTerritory
      properties:
        addressLine1:
          title: "addressLine1"
          type: "string"
          maxLength: 80
          description: Postal Address line one
        addressLine2:
          title: "addressLine2"
          type: "string"
          maxLength: 80
          description: Postal Address line two
        suburbOrPlaceOrLocality:
          title: "suburbOrPlaceOrLocality"
          type: "string"
          maxLength: 46
          description: Suburb
        postcode:
          title: "postcode"
          type: "string"
          maxLength: 10
          description: Postcode
        stateOrTerritory:
          title: "stateOrTerritory"
          type: "string"
          maxLength: 50
          enum:
            - "ACT"
            - "NSW"
            - "NT"
            - "QLD"
            - "SA"
            - "TAS"
            - "VIC"
            - "WA"
    EntityLoginData:
      type: object
      properties:
        active:
          type: boolean
        firstLoginDatetime:
          type: string
        lastLoginDatetime:
          type: string
    UpdateEntityRequest:
      title: "requestPayload"
      type: "object"
      required:
        - customerNumber
        - brand
      properties:
        customerNumber:
          title: "CORECustomerNumber"
          type: "string"
          maxLength: 50
        brand:
          type: "string"
          maxLength: 50
        primaryEmail:
          $ref: '#/components/schemas/email'
        secondaryEmail:
          $ref: '#/components/schemas/email'
        mobilePhone:
          $ref: '#/components/schemas/phone'
        landlinePhone:
          $ref: '#/components/schemas/phone'
        faxPhone:
          $ref: '#/components/schemas/phone'
        contactMethod: ##customers preferred contact method
          type: "string"
          enum:
            - "PHONE" #contact via a call (mobile or landline)
            - "EMAIL" #contact via primary email
            - "SMS" # contact via sms
        allowMarketing:
          type: "string"
          enum:
            - "YES"
            - "NO"
        myAccountRegistered:
          type: "boolean"
        myAccount:
          $ref: '#/components/schemas/EntityLoginData'
        mobileApp:
          $ref: '#/components/schemas/EntityLoginData'
    Empty:
      title: "Empty Schema"
      type: "object"
    SiteDto:
      type: object
      properties:
        utilityIdentifier:
          type: string
        checksum:
          type: string
        address:
          $ref: "#/components/schemas/SiteAddressDto"
        siteClassification:
          type: string
        siteStatus:
          type: string
          enum:
            - active
        networkJurisiction:
          $ref: "#/components/schemas/Jusrisdiction"
        networkTariffCombo:
          type: array
          items:
            type: string
        electricityMeters:
          type: array
          items:
            $ref: "#/components/schemas/ElecMeterDto"
        gasMeters:
          type: array
          items:
            $ref: "#/components/schemas/GasMeterDto"
        frmp:
          type: boolean
        frmpStartDate:
          description: Most recent date retailer became FRMP
          type: string
          format: date
        networkCode:
          type: string
    MeterInstallationType:
      enum:
      - basic
      - commS1
      - commS2
      - commS3
      - commS4
      - mrim
      - prof
      - umcp
      - sample
      - commS4D
      - commS4C
      - mram
      - vicami
      - interval
      - nconuml
      type: string
    ElecMeterDto:
      description: Holds all of the details of the Meter for an Account
      type: object
      properties:
        serial:
          type: string
        meterInstallationType:
          "$ref": "#/components/schemas/MeterInstallationType"
        meterInstallationDate:
          format: date
          type: string
        nextScheduledReadDate:
          format: date
          description: "The next date that we are reading the Meter\r\n\r\nMake sure that
            null is there is there is no scheduled\r\nRead Date"
          type: string
        readType:
          type: string
        meterStatus:
          type: string
        registers:
          type: array
          items:
            $ref: "#/components/schemas/ElecMeterRegisterDto"
    GasMeterDto:
      description: Holds all of the details of the Meter for an Account
      type: object
      properties:
        serial:
          type: string
        meterInstallationType:
          "$ref": "#/components/schemas/MeterInstallationType"
        meterInstallationDate:
          format: date
          type: string
        nextScheduledReadDate:
          format: date
          description: "The next date that we are reading the Meter\r\n\r\nMake sure that
            null is there is there is no scheduled\r\nRead Date"
          type: string
        gasMeterType:
          type: string
        gasTypeSizeCode:
          type: string
        gasMeterPositionCode:
          type: string
        meterReadFrequency:
          type: string
        meterStatus:
          type: string
        registers:
          type: array
          items:
            $ref: "#/components/schemas/GasMeterRegisterDto"   
    ElecMeterRegisterDto:
      type: object
      properties:
        register_id:
          type: integer
        suffix_id:
          type: string
        unit_of_measure:
          type: string
        multiplier:
          type: number
        dial_format:
          type: string
        billable:
          type: boolean
        controlled_load:
          type: string
        direction_indicator:
          type: string
          enum: ['E', 'I']
        isGeneration:
          description: Is the a Solar/Genration Register
          type: boolean
        tariff:
          type: string
        timeGroup:
          type: string
    GasMeterRegisterDto:
      type: object
      properties:
        register_id:
          type: integer
        suffix_id:
          type: string
        unit_of_measure:
          type: string
        multiplier:
          type: number
        dial_format:
          type: string
        billable:
          type: boolean
        direction_indicator:
          type: string
          enum: ['E', 'I']
        tariff:
          type: string
        time group:
          type: string
    entity:
      title: "entity"
      type: "object"
      required:
      - index
      - relationType
      - salutation
      - firstName
      - lastName
      properties:
        index:
          title: "Index"
          type: "integer"
          description: "Index begins a 0."
        relationType: ##provide description for each relationType
          title: "relationType"
          type: "string"
          enum:
          - "CONTACT_PRIMARY" #Primary Contact
          - "CONTACT_SECOND" #Secondary Contact
          - "ACCTMGR" #Account Manager
          - "AUTH_REP" #Authorised Rep
          - "CONTACT_EMERGENCY" #Emergency Contact
          - "CONTACT_LS" #Life Support Contact
          description: "TBC"
        salutation:
          title: "salutation"
          type: "string"
          maxLength: 20
          description: "Eg: Mr, Ms, Mrs, Dr etc."
        firstName:
          title: "firstName"
          type: "string"
          maxLength: 150
          description: "Contact Person First Name."
        lastName:
          title: "lastName"
          type: "string"
          maxLength: 150
          description: "Contact Person Last Name."
        initials:
          title: "initials"
          type: "string"
          maxLength: 150
          description: "Contact Person initials."
          nullable: true
        dob:
          title: "dob"
          type: "string"
          maxLength: 10
          description: |
            `Mandatory` where accountType = `Residential`
            Contact Person Date Of Birth.
            Format YYYY-MM-DD
          nullable: true
        contacts:
          description: Array of Contacts
          type: array
          items:
            $ref: "#/components/schemas/contacts"
        identities:
          description: Array of Identity
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/identities"
        concession:
          type: object
          description: "Concession Information"
          nullable: true
          $ref: "#/components/schemas/concession"
        language: ##provide description for each relationType
          title: "language"
          nullable: true
          type: "string"
          enum:
          - "Acehnese"
          - "Acholi"
          - "Afrikaans"
          - "Akan Twi"
          - "Albanian"
          - "Amharic"
          - "Arabic Egyptian"
          - "Arabic Iraqi"
          - "Arabic Juba"
          - "Arabic Lebanese"
          - "Arabic Palestinian-Jordanian"
          - "Arabic"
          - "Armenian"
          - "Assyrian"
          - "Azerbaijani"
          - "Baka"
          - "Bandi"
          - "Bari"
          - "Bengali"
          - "Bilen"
          - "Bissa"
          - "Bosnian"
          - "Bulgarian"
          - "Burmese"
          - "Cambodian"
          - "Cantonese"
          - "Cebuano"
          - "Chagga"
          - "Chaldean"
          - "Chin Falam"
          - "Chin Haka"
          - "Chin Hmar"
          - "Chin Lai"
          - "Chin Leitak"
          - "Chin Matu"
          - "Chin Mizo"
          - "Chin Senthang"
          - "Chin Siyin"
          - "Chin Tedim"
          - "Chin Zomi"
          - "Chin Zophei"
          - "Chin"
          - "Cook Island Maori"
          - "Creole"
          - "Croatian"
          - "Czech"
          - "Danish"
          - "Dari"
          - "Dinka"
          - "Dutch"
          - "Edo"
          - "Ewe"
          - "Fiji Hindi"
          - "Fijian"
          - "Finnish"
          - "French"
          - "Fuqing"
          - "Fur"
          - "Fuzhou"
          - "Georgian"
          - "German"
          - "Greek"
          - "Gujarati"
          - "Hainanese"
          - "Hakka"
          - "Harari"
          - "Hausa"
          - "Hazaragi"
          - "Hebrew"
          - "Hindi"
          - "Hmong"
          - "Hokkien"
          - "Hungarian"
          - "Igbo"
          - "Ilonggo"
          - "Indonesian"
          - "Italian"
          - "Japanese"
          - "Kachin"
          - "Kannada"
          - "Karen"
          - "Karenni"
          - "Khosa"
          - "Kikuyu"
          - "Kinyarwanda"
          - "Kiribati"
          - "Kirundi"
          - "Kiswahili"
          - "Konkani"
          - "Korean"
          - "Krio"
          - "Kurdish Bahdinani"
          - "Kurdish Kurmanji"
          - "Kurdish Sorani"
          - "Kurdish"
          - "Lao"
          - "Latuka"
          - "Latvian"
          - "Liberian English"
          - "Lingala"
          - "Lisu"
          - "Lithuanian"
          - "Loma"
          - "Lopit"
          - "Luganda"
          - "Luhya"
          - "Luo"
          - "Macedonian"
          - "Madi"
          - "Malay"
          - "Malayalam"
          - "Maltese"
          - "Mandarin"
          - "Mandingo"
          - "Mano"
          - "Maori"
          - "Marathi"
          - "Mauritian"
          - "Mende"
          - "Min Nan"
          - "Mongalian"
          - "Moru"
          - "Ndele"
          - "Nepalese"
          - "Norwegian"
          - "Nuer"
          - "Oromo"
          - "Pampango"
          - "Pashtu"
          - "Persian"
          - "Pidigin"
          - "Polish"
          - "Portugese"
          - "Pukapukan"
          - "Pular"
          - "Punjabi"
          - "Putian"
          - "Pwo Karen"
          - "Rajasthani"
          - "Rakhine"
          - "Rohingya"
          - "Romanian"
          - "Rukiga"
          - "Russian"
          - "Saho"
          - "Samoan"
          - "Serbian"
          - "Sgaw Karen"
          - "Shanghainese"
          - "Shilluk"
          - "Shona"
          - "Sichuan Yi"
          - "Sindhi"
          - "Sinhalese"
          - "Slovak"
          - "Slovenian"
          - "Somali"
          - "Sotho"
          - "Spanish"
          - "Sudanese Arabic"
          - "Sukuma"
          - "Swahili"
          - "Swedish"
          - "Tagalog/Filipino"
          - "Taiwanese"
          - "Tamil"
          - "Telugu"
          - "Teo Chew"
          - "Tetum"
          - "Thai"
          - "Tibetan"
          - "Tigre"
          - "Tigrinya"
          - "Timorese Hakka"
          - "Toishan"
          - "Tok Pisin"
          - "Tongan"
          - "Tshiluba"
          - "Tswana"
          - "Turkish"
          - "Turkmen"
          - "Ukrainian"
          - "Urdu"
          - "Uyghur"
          - "Uzbek"
          - "Vietnamese"
          - "Visayan"
          - "Wolof"
          - "Xhosa"
          - "Yoruba"
          - "Zande"
          - "Zulu"
          maxLength: 100
          description: "Spoken language of customer."
        familyViolence:
          title: "familyViolence"
          type: "boolean"
          description: "Customer has indicated family violence."
          nullable: true
        fvPin:
          title: "fvPin"
          type: "string"
          maxLength: 4
          description: "Customer has indicated family violence."
          nullable: true
        contactMethod: ##provide description for each contactMethod
          title: "contactMethod"
          type: "string"
          nullable: true
          enum:
          - "PHONE"
          - "EMAIL"
          - "SMS"
          description: "Customers preferred contact method - this is not related to delivery method for correspondence."
        employeeNumber:
          title: "employeeNumber"
          type: "string"
          maxLength: 20
          nullable: true
          description: "Populated if customer is an Alinta employee. Only relevant for CONTACT_PRIMARY contacts."
    contacts:
      title: "contacts"
      type: "object"
      required:
      - contactMethod
      - value
      properties:
        contactMethod:
          title: "contactMethod"
          type: "string"
          enum:
          - "EMAILPRIMARY"
          - "MOBILEPHONE"
          - "LANDLINE"
          - "FAX"
          - "EMAILSECONDARY"
          - "EMAILCC"
          maxLength: 20
          description: "Method of contact for the contact."
        value:
          title: "value"
          type: "string"
          maxLength: 500
          description: "Valid data based on kind selected."
    identities:
      title: "identities"
      type: "object"
      required:
      - identityType
      - value
      - identificationNumber
      - identificationExpiry
      properties:
        identityType: ##provide description for each identityType
          title: "identityType"
          type: "string"
          enum:
          - "DRIVER"
          - "PASSPORT"
          - "MEDICARE"
          maxLength: 20
          description: Provide a type of identity for a contact
        value:
          description: Identity specific key value in stringified format
          type: string
        identificationNumber:
          title: "identificationNumber"
          type: "string"
          maxLength: 255
          description: "Medicare Reference to be included at the end of the number with ‘/x’"
        identificationExpiry:
          title: "identificationExpiry"
          type: "string"
          maxLength: 10
          description: |
            Identity type expiry date in format `YYYY-MM-DD`
            If medicare card colour is `GREEN`, date format must be `MM/YYYY`
            If medicare card colour is `BLUE` or `YELLOW`, date format should be `DD/MM/YYYY`
    concession:
      title: "concession"
      type: "object"
      required:
      - eicConc
      - concessionCard
      - firstName
      - lastName
      - cardNumber
      properties:
        eicConc:
          title: "eicConc"
          type: "boolean"
          description: |
            Explicit Informed Consent
            If false the customer will not be entitled to receive any concessions
        concessionCard: ##provide description for each concessionCard
          title: "concessionCard"
          type: "string"
          enum:
          - "PCC" # --Pensioner Concession Card
          - "HCC" # --Health Care Card
          - "DVAPCC" # --Dept. Veterans Affairs Pensioner Card
          - "CSHC" # --Commonwealth Seniors Health Care Card
          - "DVAGC" # --Dept. Veterans Affairs Gold Card
          - "DVAGC_TPI" # --Dept. Veterans Affairs Gold Card – Totally and Permanently Incapacitated
          - "DVAGC_WW" # --Dept. Veterans Affairs Gold Card – War Widow/ers
          - "DVAGC_EDA" # --Dept. Veterans Affairs Gold Card – Extreme Disablement
          - "IMM" # --Australian Immigration Card
          - "QGSC" # --Queensland Seniors Card
          - "LIHCC" # --Low Income Health Care Card
          description: "TBC"
        firstName:
          title: "firstName"
          type: "string"
          maxLength: 150
          description: "Concession card First Name."
        initials:
          title: "initials"
          type: "string"
          maxLength: 20
          description: "Concession card initials."
          nullable: true
        lastName:
          title: "lastName"
          type: "string"
          maxLength: 150
          description: "Concession card Last Name."
        cardNumber:
          title: "cardNumber"
          type: "string"
          maxLength: 20
          description: "Concession card number."
        startDate:
          title: "startDate"
          type: "string"
          nullable: true
          description: |
            Contact Person Date Of Birth
            Format YYYY-MM-DD
        expiryDate:
          title: "expiryDate"
          type: "string"
          maxLength: 10
          nullable: true
          description: |
            Concession card expiry date. Field is `Mandatory` if card type = `HCC` or `IMM`
            Format YYYY-MM-DD
        medicalCooling:
          title: "medicalCooling"
          type: "boolean"
          description: "Indicates whether medical cooling is required."
    account:
      title: "account"
      type: "object"
      required:
      - serviceType
      - accountType
      - protectionsClassification
      - occupancyType
      - transferType
      - postalAddress
      - utility
      - pricing
      - sensitiveLoad
      - deliveryMethod
      - allowPromotions
      - paymentMethod
      properties:
        serviceType:
          title: "serviceType"
          type: "string"
          enum:
          - "ELECTRICITY"
          - "GAS"
          - "HOME"
          - "MOTOR"
          maxLength: 255
          description: "HOME and MOTOR to be used for Insurance policies."
        occupancyType:
          title: "Occupancy Type"
          type: "string"
          enum:
          - "Renter"
          - "Owner"
          - "Unknown"
          maxLength: 20
          description: "For MM, occupancy type must be passed"
        protectionsClassification:
          title: "protectionsClassification"
          type: "string"
          enum:
          - "SMALL"
          - "SMALLSMALL"
          - "LARGESMALL"
          - "LARGE"
          maxLength: 20
          description: |
            For MM, classification must be:
            SMALL = Small Protections
            SMALLSMALL = Small Consumption Small Protections
            LARGESMALL = Large Consumption Small Protections
        transferType:
          title: "transferType"
          type: "string"
          enum:
          - "TRANSFER"
          - "MOVE_IN"
          - "NEW_CONNECTION"
          - "NOVATION"
          - "RETRO_TRANSFER"
          maxLength: 255
          description: "Insurance Policies must use the transferType of `NEW_CONNECTION`."
        commenceDate:
          title: "commenceDate"
          type: "string"
          maxLength: 150
          description: |
            This date is used as the service order scheduled date.
            `Mandatory` if `transferType` = `MOVE_IN`
            Format `YYYY-MM-DD`
          nullable: true
        acn:
          title: "acn"
          type: "string"
          maxLength: 20
          description: |
            Company ACN.
            `Mandatory` where `accountType` = `BUSINESS` and `abn` is `NULL`
          nullable: true
        abn:
          title: "abn"
          type: "string"
          maxLength: 20
          description: |
            Company ABN.
            `Mandatory` where `accountType` = `BUSINESS` and `acn` is `NULL`
          nullable: true
        companyName:
          title: "companyName"
          type: "string"
          maxLength: 255
          description: "`Mandatory` where `accountType` = `BUSINESS`."
          nullable: true
        tradingName:
          title: "tradingName"
          type: "string"
          maxLength: 255
          description: "Trading as name instead of the company name"
          nullable: true
        postalAddress:
          description: "Array of Postal Address"
          type: array
          items:
            $ref: "#/components/schemas/accountCreationPostalAddress"
        utility:
          description: "Utility Details"
          type: object
          $ref: "#/components/schemas/utility"
        pricing:
          description: "Pricing Details"
          type: object
          $ref: "#/components/schemas/pricing"
        creditCheck:
          title: "creditCheck"
          type: "boolean"
          maxLength: 150
          description: |
            True = Pass
            False = Fail
          nullable: true
        concessionPrimary:
          title: "concessionPrimary"
          type: "boolean"
          maxLength: 150
          description: |
            Account is the primary residence of the customer.
            `Mandatory` if a Concession card is provided.
          nullable: true
        sensitiveLoad:
          title: "sensitiveLoad"
          type: "boolean"
          maxLength: 150
          description: "Set to `false` for service types applicable for insurance policies."
        lifeSupport:
          title: "Life Support"
          type: "object"
          $ref: "#/components/schemas/lifeSupport"
          nullable: true
        deliveryMethod:
          title: "deliveryMethod"
          type: "string"
          maxLength: 50
          enum:
          - "POST"
          - "EMAIL"
          description: "Delivery Method"
        allowPromotions:
          title: "allowPromotions"
          type: "string"
          description: |
            Allow Promotions values
            NO For Do not Allow Promotions
            YES For Allow Promotions
            NO_DIGITAL For No Digital Promotions
          enum:
          - "NO"
          - "YES"
          - "NO_DIGITAL"
        paymentMethod:
          title: "paymentMethod"
          type: "string"
          maxLength: 50
          enum:
          - "DD"
          - "CASH"
          - "CC"
          description: "Payment Method"
        payment:
          nullable: true
          $ref: "#/components/schemas/payment"
        billGroup:
          title: "billGroup"
          type: "string"
          maxLength: 50
          description: "Only populate if Quarterly billing is requested by the customer."
          nullable: true
        multisiteGroup:
          title: "multisiteGroup"
          type: "string"
          maxLength: 255
          description: "Multisite Group Name"
          nullable: true
        contractNumber:
          title: "contractNumber"
          type: "string"
          maxLength: 300
          description: "Multisite Contract Number"
        siteAlias:
          title: "siteAlias"
          type: "string"
          maxLength: 150
          description: "Typically used for New Connections"
          nullable: true
        vsi:
          description: "VSI Details"
          type: object
          $ref: "#/components/schemas/vsi"
          nullable: true
        remoteReen:
          description: "Remote ReEn Details"
          type: object
          $ref: "#/components/schemas/remoteReenergisation"
          nullable: true
        directMeteringCharge:
          title: "directMeteringCharge"
          type: "boolean"
          description: |
            Direct Metering Agreement Flag - Trigger task creation in CORE to capture DMA information from customer.
            True = Pass
            False = Fail
          nullable: true
    utility:
      title: "utility"
      type: "object"
      required:
      - nmi
      - utilityNetwork
      - jurisdiction
      - utilityAddress
      properties:
        nmi:
          title: "nmi"
          type: "string"
          maxLength: 15
          description: |
            The Site Identifier without the checksum.
            Pass `NEW_CONNECTION` in case of New connection account.
        nmiChecksum:
          title: "nmiChecksum" ##what do we do if its a new connection?
          type: "string"
          maxLength: 1
          description: "Site Identifier Checksum"
          nullable: true
        utilityNetwork:
          title: "utilityNetwork"
          type: "string"
          enum:
          - "CITIPP" # --VIC--CitiPower
          - "POWCP" # --VIC--Powercor
          - "SOLARISP" # --VIC--Jemena
          - "EASTERN" # --VIC--AusNet
          - "UNITED" # --VIC--United
          - "ENVESTRA" # --VIC--Australian Gas Networks (VIC) and  --VIC--Australian Gas Networks (VIC) - Albury
          - "MULTINET" # --VIC--Multinet Gas
          - "TXUN" # --VIC--Ausnet Services
          - "ENVSA" # --VIC--Australian Gas Networks (SA) - Mildura and --SA--Australian Gas Networks (SA)
          - "ENERGEXP" # --NSW--Energex
          - "ENERGYAP" # --NSW--Ausgrid and --QLD--Energex
          - "INTEGP" # --NSW--Essential
          - "CNRGYP" # --NSW--Jemena Gas Networks (NSW)
          - "AGLGNNWO" # --NSW--Australian Gas Networks (NSW)
          - "COUNTRYNWO" # --NSW--Australian Gas Networks (NSW)
          - "CRPNWO" # --NSW--Central Ranges Pipeline
          - "ERGONETP" # --QLD--Ergon
          - "APTALLGAS" # --QLD--Allgas Energy (QLD)
          - "ENVQLD" # --QLD--Australian Gas Networks (QLD)
          - "UMPLP" # --SA--SA Power
          - "ACTEWP" # --ACT--Evoenergy
          - "ACTEWNWO" # --ACT--Evoenergy Gas
          maxLength: 50
          description: "The network (distributor) for the utility."
        jurisdiction:
          title: "jurisdiction"
          type: "string"
          enum:
          - "VIC"
          - "SA"
          - "QLD"
          - "NSW"
          maxLength: 15
          description: "Site Jurisdiction or State"
        utilityAddress:
          $ref: "#/components/schemas/utilityAddress"
        estimatedAnnualLoad:
          title: "estimatedAnnualLoad"
          type: "string"
          maxLength: 16
          description: "Estimated Annual Load Usage for ELECTRICITY Customers"
          nullable: true
        hazardDesc:
          title: "hazardDesc" ##get enums from other hazard desc
          type: "string"
          description: "Provide any hazards worthy of reporting at the property."
          nullable: true
        accessDesc:
          title: "accessDesc" ##get enums from other access desc
          type: "string"
          maxLength: 160
          description: "Provide any access requirements needed to gain access to the property."
          nullable: true
        meters:
          title: "meters"
          type: array
          items:
            $ref: "#/components/schemas/meters"
        utilityCustomerClassificationCode:
          title: "utilityCustomerClassificationCode"
          type: "string"
          enum:
          - "BUSINESS"
          - "RESIDENTIAL"
          nullable: true      
    utilityAddress:
      title: "utilityAddress"
      description: "Site Address"
      type: "object"
      required:
      - suburbOrPlaceOrLocality
      - postcode
      - stateOrTerritory
      properties:
        houseNumber: ##should this be mandatory if lot not provided?
          title: "houseNumber"
          type: "string"
          maxLength: 10
          nullable: true
        houseNumberSuffix:
          title: "houseNumberSuffix"
          type: "string"
          maxLength: 5
          nullable: true
        houseNumberTo:
          title: "houseNumberTo"
          type: "string"
          maxLength: 10
          nullable: true
        houseNumberToSuffix:
          title: "houseNumberToSuffix"
          type: "string"
          maxLength: 5
          nullable: true
        lotNumber:
          title: "lotNumber"
          type: "string"
          maxLength: 5
          nullable: true
        flatOrUnitNumber:
          title: "flatOrUnitNumber"
          type: "string"
          maxLength: 20
          nullable: true
        flatOrUnitType: ##add enums to this
          title: "flatOrUnitType"
          type: "string"
          maxLength: 4
          nullable: true
        floorOrLevelNumber:
          title: "floorOrLevelNumber"
          type: "string"
          maxLength: 10
          nullable: true
        floorOrLevelType: ##add enums to this
          title: "floorOrLevelType"
          type: "string"
          maxLength: 2
          nullable: true
        streetName:
          title: "streetName"
          type: "string"
          maxLength: 50
        streetType: ##add enums to this
          title: "streetType"
          type: "string"
          maxLength: 4
          nullable: true
        streetsSuffix:
          title: "streetsSuffix"
          type: "string"
          maxLength: 2
          nullable: true
        suburbOrPlaceOrLocality:
          title: "suburbOrPlaceOrLocality"
          type: "string"
          maxLength: 100
        postcode:
          title: "postcode"
          type: "string"
          maxLength: 10
        stateOrTerritory:
          title: "stateOrTerritory"
          type: "string"
          maxLength: 3
        propertyName:
          title: "propertyName"
          type: "string"
          maxLength: 30
          nullable: true
        locationDesc:
          title: "locationDesc"
          type: "string"
          maxLength: 30
          nullable: true
        dpNumber:
          title: "dpNumber"
          type: "string"
          maxLength: 20
          description: "Used in NSW"
          nullable: true
        sectionNumber:
          title: "sectionNumber"
          type: "string"
          maxLength: 20
          description: "Used in NSW"
          nullable: true
        gnafpid:
          title: "gnafpid"
          type: "string"
          maxLength: 20
          description: "Geocoded National Address File Persistent Identifier"
          nullable: true
        addressLine1:
          title: "addressLine1"
          type: "string"
          maxLength: 255
          description: "Unstructured address details specified by AEMO"
          nullable: true
        addressLine2:
          title: "addressLine2"
          type: "string"
          maxLength: 255
          description: "Unstructured address details specified by AEMO"
          nullable: true
        addressLine3:
          title: "addressLine3"
          type: "string"
          maxLength: 255
          description: "Unstructured address details specified by AEMO"
          nullable: true
    meters:
      title: "meters"
      type: "object"
      properties:
        serialNumber:
          title: "serialNumber"
          type: "string"
          maxLength: 50
          description: "tbc"
          nullable: true
        registers:
          description: "Array of registers"
          type: array
          items:
            $ref: "#/components/schemas/registers"
          nullable: true
    registers:
      title: "registers"
      type: "object"
      properties:
        registerId:
          title: "registerId"
          type: "string"
          maxLength: 10
          nullable: true
        networkTariffCode:
          title: "networkTariffCode"
          type: "string"
          maxLength: 10 # check length
          nullable: true
    payment:
      title: "payment details"
      type: "object"
      properties:
        ddBank:
          title: "ddBank"
          type: "string"
          maxLength: 50
          description: |
            `Mandatory` if the payment method is `DD`
          nullable: true
        ddBranch:
          title: "ddBranch"
          type: "string"
          maxLength: 50
          description: |
            `Mandatory` if the payment method is `DD`
          nullable: true
        ddBsb:
          title: "ddBsb"
          type: "string"
          maxLength: 10
          description: |
            `Mandatory` if the payment method is `DD`
          nullable: true
        ddAccount:
          title: "ddAccount"
          type: "string"
          maxLength: 50
          description: |
            `Mandatory` if the payment method is `DD`
          nullable: true
        paymentToken:
          title: "paymentToken"
          type: "string"
          maxLength: 20
          description: |
            `Mandatory` if the payment method is `CC`
          nullable: true
    accountCreationPostalAddress:
      title: "postalAddress"
      type: "object"
      required:
      - addressType
      - addressLine1
      - suburbOrPlaceOrLocality
      - postcode
      - stateOrTerritory
      properties:
        addressType:
          title: "addressType"
          type: "string"
          enum:
          - "POST"
          - "POST_LS"
          maxLength: 20
          description: |
            POST - Postal Address
            POST_LS - Life Support Postal Address - `Mandatory` if Life Support is passed
        addressLine1:
          title: "addressLine1"
          type: "string"
          maxLength: 80
          description: Postal Address line one
        addressLine2:
          title: "addressLine2"
          type: "string"
          maxLength: 80
          description: Postal Address line two
          nullable: true
        suburbOrPlaceOrLocality:
          title: "suburbOrPlaceOrLocality"
          type: "string"
          maxLength: 46
          description: Suburb
        postcode:
          title: "postcode"
          type: "string"
          maxLength: 10
          description: Postcode
        stateOrTerritory:
          title: "stateOrTerritory"
          type: "string"
          maxLength: 50
          description: State
    pricing:
      title: "pricing"
      type: "object"
      required:
      - productName
      properties:
        productName:
          title: "productName"
          type: "string"
          maxLength: 50
          description: |
            Product Name in the sales contract.
            For Multisites, this is the standard Product Name (ie.Business Deal) not the CORE generated Multi Product name
        pricingTraditional:
          nullable: true
          $ref: "#/components/schemas/pricingTraditional"
        pricingSpecial:
          nullable: true
          $ref: "#/components/schemas/pricingSpecial"
        commissionType:
          title: "commissionType"
          type: "string"
          maxLength: 50
          description: |
            "Not applicable for Mass Market"
          nullable: true
        commissionPercentage:
          title: "commissionPercentage"
          type: "number"
          description: |
            "Not applicable for Mass Market"
          nullable: true
        contractTermName:
          title: "contractTermName"
          type: "string"
          maxLength: 10
          description: |
            "Duration of contract represented as Months plus MTH i.e.
            12MTH, 15MTH, 24MTH"
          nullable: true
        cpiIncrease:
          title: "cpiIncrease"
          type: "string"
          maxLength: 10
          description: |
            "Not Used in Mass Market"
          nullable: true
        proposedTariff:
          title: "proposedTariff"
          description: |
            `Mandatory` if `Transfer Type` = `New Connection`.
            Used to assign the initial pricing for a New Connection.
          type: array
          items:
            $ref: "#/components/schemas/proposedTariff"
          nullable: true
        planName:
          title: "planName"
          type: "string"
          maxLength: 100
          description: |
            Only required when pricingSpecial is set
            Not Applicable for MM
          nullable: true
        plans:
          title: "plans"
          description: |
            Only required when pricingSpecial is set
            Not Applicable for MM
          type: array
          items:
            $ref: "#/components/schemas/plans"
          nullable: true
    pricingTraditional:
      title: "pricingTraditional"
      description: "Object of pricing traditional"
      type: "object"
      properties:
        plans:
          description: "Array of pricing traditional"
          type: array
          items:
            $ref: "#/components/schemas/plans"
    plans:
      title: "plans"
      type: "object"
      required:
      - id
      - planName
      - description
      - planVersions
      properties:
        id:
          title: "id"
          type: "integer"
          maxLength: 11
          description: Plan Id
        planName:
          title: "planName"
          type: "string"
          maxLength: 100
          description: PlanName
        description:
          title: "description"
          type: "string"
          maxLength: 255
          description: Plan Description
        planVersions:
          description: "Array of Plan Versions"
          type: array
          items:
            $ref: "#/components/schemas/planVersions"
    planVersions:
      title: "planVersions"
      type: "object"
      required:
      - id
      - startDate
      - planItems
      properties:
        id:
          title: "id"
          type: "integer"
          maxLength: 11
          description: Plan Version Id
        versionSetName:
          title: "versionSetName"
          type: "string"
          maxLength: 100
          description: Version Set Name
          nullable: true
        startDate:
          title: "startDate"
          type: "string"
          description: Date format YYYY-MM-DD
        endDate:
          title: "endDate"
          type: "string"
          description: Date format YYYY-MM-DD or null
          nullable: true
        planItems:
          description: "Array of Plan Items"
          type: array
          items:
            $ref: "#/components/schemas/planItems"
    planItems:
      title: "planItems"
      type: "object"
      required:
      - id
      - name
      - invoiceDescription
      - planItemSteps
      properties:
        id:
          title: "id"
          type: "integer"
          maxLength: 11
          description: Plan Item Id
        name:
          title: "name"
          type: "string"
          maxLength: 50
          description: Plan Item Name
        invoiceDescription:
          title: "invoiceDescription"
          type: "string"
          maxLength: 255
          description: Invoice Description
        planItemSteps:
          description: "Array of Plan Items Steps"
          type: array
          items:
            $ref: "#/components/schemas/planItemSteps"
    planItemSteps:
      title: "planItemSteps"
      type: "object"
      required:
      - id
      - description
      - startStep
      - endStep
      - rate
      properties:
        id:
          title: "id"
          type: "integer"
          maxLength: 11
          description: Plan Item Step Id
        description:
          title: "description"
          type: "string"
          maxLength: 255
          description: Plan Item Step Description
        startStep:
          title: "startStep"
          type: "string"
          description: Format decimal(18,8)
        endStep:
          title: "endStep"
          type: "string"
          description: Format decimal(18,8)
        rate:
          title: "rate"
          type: "string"
          description: Format decimal(18,9)
        stepFrequency:
          title: "stepFrequency"
          type: "string"
          enum:
          - "DAY"
          - "MONTH"
          - "QUARTER"
          - "YEAR"
          maxLength: 20
          description: Step Frequency
        rateFrequency:
          title: "rateFrequency"
          type: "string"
          maxLength: 20
          enum:
          - "DAY"
          - "MONTH"
          - "QUARTER"
          - "YEAR"
          description: Rate Frequency
    pricingSpecial:
      title: "pricingSpecial"
      description: "Not applicable for Mass Market"
      type: "object"
      required:
      - retailSpecial
      - networkSpecial
      - marketSpecial
      properties:
        retailSpecial:
          title: "retailSpecial"
          type: "boolean"
          description: Not Used in Mass Market
        networkSpecial:
          title: "networkSpecial"
          type: "boolean"
          description: Not Used in Mass Market
        marketSpecial:
          title: "marketSpecial"
          type: "boolean"
          description: Not Used in Mass Market
    contactValidation:
      title: "contactValidation"
      type: "object"
      required:
      - email
      - phone
      - identity
      properties:
        email:
          title: "Email Validated"
          type: "string"
          enum:
          - "YES"
          - "NO"
        phone:
          title: "Phone Validated"
          type: "string"
          enum:
          - "YES"
          - "NO"
        identity:
          title: "Identity Validated"
          type: "string"
          enum:
          - "YES"
          - "NO"
    lifeSupport:
      title: "lifeSupport"
      type: "object"
      required:
      - lsRequiredDate
      - lsRegistrationOwner
      - lsDeliveryMethod
      - lsContactMethod
      properties:
        lsRequiredDate:
          title: "lsRequiredDate"
          type: "string"
          description: Date Format YYYY-MM-DD
        lsRegistrationOwner:
          title: "lsRegistrationOwner"
          type: "string"
          enum:
          - "YES"
          - "NO"
          maxLength: 10
          description: |
            Yes = Alinta is the Registration Owner
            No = Alinta is NOT the Registration Owner
        lsDeliveryMethod:
          title: "lsDeliveryMethod"
          type: "string"
          enum:
          - "POST"
          - "EMAIL"
          maxLength: 160
          description: Delivery method for the Life Support Contact
        lsEquipment:
          title: "lsEquipment"
          type: array
          items:
            $ref: "#/components/schemas/lsEquipment"
          description: "List of Life Support Equipments"
        lsContactMethod:
          title: "lsContactMethod"
          type: "string"
          enum:
          - "POSTAL"
          - "SITE"
          - "EMAIL"
          - "PHONE"
          maxLength: 240
          description: Life Support Contact Method
        lsSpecialNotes:
          title: "lsSpecialNotes"
          type: "string"
          maxLength: 240
          description: |
            `Mandatory` if `lsEquipment` = `OTH`
            Provide any additional information the customer wishes to convey to the distributor.
          nullable: true
    lsEquipment:
      title: "lsEquipment"
      type: string
      enum:
      - "OCVIC"
      - "IPD"
      - "KIDNEY"
      - "AIRWAY"
      - "CRIGLER"
      - "VENTIL"
      - "OTH"
    vsi:
      title: "vsi"
      description: "Visual Site Inspection Details for QLD"
      type: "object"
      required:
      - vsiContactIndex
      - appointmentTime
      - siteAccess
      properties:
        vsiContactIndex:
          title: "vsiContactIndex"
          type: "integer"
          description: |
            "index of the Entity that will be at the property"
        appointmentTime:
          title: "appointmentTime"
          type: "string"
          maxLength: 4
          description: |
            24hour time.
            Must be between 0800 and 1300
        siteAccess:
          title: "siteAccess"
          type: "string"
          maxLength: 160
          description: |
            Examples: Customer in attendance
            Key in meter box
            Key in letter box
            Form 3 in meter box
            Form 3 in letter box"
        specialInstructions:
          title: "specialInstructions"
          type: "string"
          maxLength: 160
          description: Optional comments for service order
          nullable: true
        accessDetails:
          title: "lsContactMethod"
          type: "string"
          enum:
          - "Customer reports no access requirements"
          - "Not Known To Retailer"
          maxLength: 160
          description: |
            Free text description is also permitted.
            Leave accessDetails blank if access details are the same as account access details.
          nullable: true
        hazardDetails:
          title: "hazardDetails"
          type: "string"
          enum:
          - "Customer Reports No Hazard"
          - "Dog"
          - "Electric Fence"
          - "Customer Caution"
          - "Electrical Safety Issue"
          - "Asbestos Fuse"
          - "Asbestos Board"
          - "Not Known To Retailer"
          maxLength: 80
          description: |
            Free text description is also permitted.
            Leave accessDetails blank if hazard details are the same as account hazard details.
          nullable: true
    remoteReenergisation:
      title: "remoteReenergisation"
      description: "Remote Re-energisation Details"
      type: "object"
      required:
      - question1
      - question2
      - question3
      properties:
        question1:
          title: "question1"
          type: "boolean"
          description: |
            NSW - Is there or will there be any customer requiring life support at the property?
            VIC - Is the Main Switch in the OFF position?
        question2:
          title: "question2"
          type: "boolean"
          description: |
            NSW - Are there any alterations or renovations planned or in progress at the property?
            VIC - Are there any alterations or renovations planned or in progress at the property?
        question3:
          title: "question3"
          type: "boolean"
          description: |
            NSW - In the case where the site has previously been disconnected, were there any renovations or alterations at the property,
            if so, do you have a Certificate for Compliance of Electrical Work (CCEW).
            VIC - In the case where the site has previously been de-energised, were there any renovations or alterations at the property?
        question4:
          title: "question4"
          type: "boolean"
          description: |
            `Mandatory` for NSW. Optional for VIC.
            NSW - Within the last 2 days, have you or your representative inspected the site to ensure the main switch is in the OFF position and site is safe to reconnect?
          nullable: true
        question5:
          title: "question5"
          type: "boolean"
          description: |
            `Mandatory` for NSW. Optional for VIC.
            NSW - Do you know if the power has been off at the property for longer than 6 months, if so, do you have a Safety Certificate or Certificate of Compliance for Electrical Work (CCEW)
          nullable: true
    proposedTariff:
      type: "string"
    SmoothPay:
      type: object
      properties:
        nextPaymentAmount:
          type: number
        nextPaymentDate:
          type: string
          format: date
    RelationType:
      type: string
      enum:
        - Secondary_Contact
        - Primary_Multisite Entity
        - Account_Manager
        - Referral_for_Account
        - Emergency_Contact
        - Multi_Account_Lead
        - Inactive_Contact
        - Authorised_Rep
        - Multi_Contract_Lead
        - Multi_Account_Secondary
        - Life_Support_Contact
        - Claimant
        - Contract_Lead_Secondary
        - Power_of_Attorney
        - State_Trustee
        - Support_Worker
        - Broker
    LifeSupportRegStatus:
      enum:
        - notregistered
        - new
        - pending
        - extensionreg
        - registered
        - cancelreg
        - extensiondereg
        - deregistered
        - canceldereg
        - pendingdereg
        - newdereg
        - completed
      type: string
    Contacts:
      type: object
      properties:
        mobilePhone:
          type: string
        landlinePhone:
          type: string
        primaryEmail:
          type: string
        secondaryEmail:
          type: string
        faxPhone:
          type: string
        ccEmail:
          type: string
    BusinessDto:
      type: object
      properties:
        companyName:
          description: Name of the Company
          type: string
        tradingName:
          description: Trading Name of the COmpany
          type: string
        companyType:
          "$ref": "#/components/schemas/CompanyType"
        anzsicCode:
          "$ref": "#/components/schemas/IndustryType"
        companyTypeDescription:
          description: More descriptive company type
          type: string
        industryTypeDescription:
          description: More descriptive industry type
          type: string
    RequestError:
      type: object
      properties:
        code:
          type: integer
        detail:
          type: string
        message:
          type: string
    AccountAddressesDto:
      type: object
      properties:
        post:
          $ref: "#/components/schemas/AccountAddress"
        street:
          $ref: "#/components/schemas/AccountAddress"
        forward:
          $ref: "#/components/schemas/AccountAddress"
        lifeSupportPost:
          $ref: "#/components/schemas/AccountAddress"